{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/mydialog/mydialog.component.ts","./src/app/mydialog/mydialog.component.html","./src/app/pages/addproject/addproject.component.ts","./src/app/pages/addproject/addproject.component.html","./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/pages/lead/lead.component.ts","./src/app/pages/lead/lead.component.html","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/pages/manageproject/manageproject.component.ts","./src/app/pages/manageproject/manageproject.component.html","./src/app/pages/motion/motion.component.ts","./src/app/pages/motion/motion.component.html","./src/app/pages/myprojects/myprojects.component.ts","./src/app/pages/myprojects/myprojects.component.html","./src/app/pages/myrequists/myrequists.component.ts","./src/app/pages/myrequists/myrequists.component.html","./src/app/pages/register/register.component.ts","./src/app/pages/register/register.component.html","./src/app/pages/updateproject/updateproject.component.ts","./src/app/pages/updateproject/updateproject.component.html","./src/app/services/auth.service.ts","./src/app/services/projects.service.ts","./src/app/services/token-interceptor.service.ts","./src/app/update-pop/update-pop.component.ts","./src/app/update-pop/update-pop.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACK;AACG;AACS;AACM;AACA;AACS;AACA;AACT;AACZ;AACN;;;AAG5D,MAAM,MAAM,GAAW;IACrB,gDAAgD;IAChD,EAAC,IAAI,EAAC,EAAE,EAAC,UAAU,EAAC,MAAM,EAAC,SAAS,EAAC,MAAM,EAAC;IAC5C,EAAC,IAAI,EAAC,MAAM,EAAC,SAAS,EAAE,wEAAa,EAAC;IACtC,EAAC,IAAI,EAAC,OAAO,EAAC,SAAS,EAAE,2EAAc,EAAC;IACxC,EAAC,IAAI,EAAC,UAAU,EAAC,SAAS,EAAE,oFAAiB,EAAC;IAC9C,EAAC,IAAI,EAAC,YAAY,EAAC,SAAS,EAAE,0FAAmB,EAAC;IAClD,EAAC,IAAI,EAAC,YAAY,EAAC,SAAS,EAAE,0FAAmB,EAAC;IAClD,EAAC,IAAI,EAAC,eAAe,EAAC,SAAS,EAAE,mGAAsB,EAAC;IACxD,EAAC,IAAI,EAAC,eAAe,EAAC,SAAS,EAAE,mGAAsB,EAAC;IACxD,EAAC,IAAI,EAAC,YAAY,EAAC,SAAS,EAAE,0FAAmB,EAAC;IAClD,EAAC,IAAI,EAAC,QAAQ,EAAC,SAAS,EAAE,+EAAe,EAAC;IAC1C,EAAC,IAAI,EAAC,MAAM,EAAC,SAAS,EAAE,yEAAa,EAAC;CACvC,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AChCD;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;AAQnC,MAAM,YAAY;IAQvB,YAAmB,OAAmB;QAAnB,YAAO,GAAP,OAAO,CAAY;QAPtC,UAAK,GAAG,KAAK,CAAC;QAQZ,OAAO,CAAC,SAAS,EAAE,CAAC;QACpB,OAAO,CAAC,OAAO,EAAE,CAAC;IACpB,CAAC;IATD,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;IAC/B,CAAC;IACD,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;IAC5B,CAAC;IAMD,OAAO;QACL,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;QACtB,OAAO,KAAK,CAAC;IACf,CAAC;;wEAhBU,YAAY;4FAAZ,YAAY;QCFzB,yEACE;QAAA,uEAAwB;QAAA,qFAA0B;QAAA,4DAAI;QAEtD,wEACE;QAYA,wEACE;QAAA,uEAAgE;QAAA,+DAAI;QAAA,4DAAI;QAC1E,4DAAK;QAIP,4DAAK;QACL,wEACE;QAAA,wEACE;QAAA,uEAAgE;QAAA,gEAAI;QAAA,4DAAI;QAC1E,4DAAK;QACL,yEACE;QAAA,wEAAsE;QAAA,uEAAW;QAAA,4DAAI;QACvF,4DAAK;QACL,yEACE;QAAA,wEAAsE;QAAA,uEAAW;QAAA,4DAAI;QACvF,4DAAK;QACL,yEACE;QAAA,wEAAmG;QAAA,uEAAW;QAAA,4DAAI;QACpH,4DAAK;QACL,yEACE;QAAA,wEAAyE;QAAA,2EAAe;QAAA,4DAAI;QAC9F,4DAAK;QACP,4DAAK;QAiBP,4DAAM;QACN,2EACA;QAAA,4EAA+B;QAC/B,4DAAM;;QAxDmB,0DAAkB;QAAlB,+EAAkB;QAoBlB,0DAAmB;QAAnB,gFAAmB;QAWlB,2DAA4B;QAA5B,oFAA4B;;6FDhCzC,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AACa;AACG;AACS;AACM;AACH;AACtB;AAC0B;AACD;AACS;AACA;AACT;AACC;AACpB;AACO;AACK;AACL;AACX;AACW;AACP;AACE;AACD;AACC;AACN;AACS;AACT;;AAyChD,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,CAAC,EAAC,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,4FAAuB,EAAE,KAAK,EAAC,IAAI,EAAC,CAAC,YApB/E;YACP,uEAAa;YACb,qEAAgB;YAChB,oEAAgB;YAChB,kEAAmB;YACnB,6FAAuB;YACvB,yEAAe;YACf,qEAAa;YACb,gFAAkB;YAClB,yEAAe;YACf,2EAAgB;YAChB,2EAAgB;YAChB,qEAAa;YACb,8EAAiB;YACjB,qEAAa;SACd;mIAQU,SAAS,mBArClB,2DAAY;QACZ,wEAAa;QACb,2EAAc;QACd,oFAAiB;QACjB,0FAAmB;QACnB,2FAAmB;QACnB,oGAAsB;QACtB,oGAAsB;QACtB,2FAAmB;QACnB,+EAAiB;QACjB,oFAAkB;QAClB,+EAAe;QACf,yEAAa,aAGb,uEAAa;QACb,qEAAgB;QAChB,oEAAgB;QAChB,kEAAmB;QACnB,6FAAuB;QACvB,yEAAe;QACf,qEAAa;QACb,gFAAkB;QAClB,yEAAe;QACf,2EAAgB;QAChB,2EAAgB;QAChB,qEAAa;QACb,8EAAiB;QACjB,qEAAa;6FASJ,SAAS;cAvCrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,wEAAa;oBACb,2EAAc;oBACd,oFAAiB;oBACjB,0FAAmB;oBACnB,2FAAmB;oBACnB,oGAAsB;oBACtB,oGAAsB;oBACtB,2FAAmB;oBACnB,+EAAiB;oBACjB,oFAAkB;oBAClB,+EAAe;oBACf,yEAAa;iBACd;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,qEAAgB;oBAChB,oEAAgB;oBAChB,kEAAmB;oBACnB,6FAAuB;oBACvB,yEAAe;oBACf,qEAAa;oBACb,gFAAkB;oBAClB,yEAAe;oBACf,2EAAgB;oBAChB,2EAAgB;oBAChB,qEAAa;oBACb,8EAAiB;oBACjB,qEAAa;iBACd;gBACD,eAAe,EAAE;oBACf,+EAAiB;oBACjB,oFAAkB;iBACnB;gBACD,SAAS,EAAE,CAAC,EAAC,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,4FAAuB,EAAE,KAAK,EAAC,IAAI,EAAC,CAAC;gBACxF,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACrED;AAAA;AAAA;AAAA;AAAA;AAA0D;AACC;;;;ICOnD,qEACI;IAAA,qEAAI;IAAA,uDAAe;IAAA,4DAAK;IACxB,qEAAI;IAAA,uDAAsB;IAAA,4DAAK;IAC/B,qEAAI;IAAA,uDAAsB;IAAA,4DAAK;IAC/B,qEAAI;IAAA,uDAAuB;IAAA,4DAAK;IACpC,4DAAK;;;IAJG,0DAAe;IAAf,+EAAe;IACf,0DAAsB;IAAtB,sFAAsB;IACtB,0DAAsB;IAAtB,sFAAsB;IACtB,0DAAuB;IAAvB,uFAAuB;;ADFhC,MAAM,iBAAiB;IAG5B,YAA4C,MAAa;QAAb,WAAM,GAAN,MAAM,CAAO;QADzD,SAAI,GAAU,EAAG,CAAC;QAEhB,kCAAkC;QAClC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACxB,gBAAgB;IACjB,CAAC;IAEF,QAAQ;IACR,CAAC;;kFAVU,iBAAiB,kEAGR,wEAAe;iGAHxB,iBAAiB;QCV9B,2EACI;QAAA,wEACI;QAAA,wEAAgB;QAAA,yEAAc;QAAA,4DAAK;QACnC,wEAAgB;QAAA,+DAAI;QAAA,4DAAK;QACzB,wEAAgB;QAAA,mEAAQ;QAAA,4DAAK;QAC7B,wEAAgB;QAAA,gEAAK;QAAA,4DAAK;QAC9B,4DAAQ;QACR,yEACI;QAAA,6GACI;QAKR,4DAAQ;QACZ,4DAAQ;;QAPI,2DAA0B;QAA1B,6EAA0B;;6FDEzB,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;sBAIc,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AEbrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;;;;;;;ICApE,0EAA8C;IAAA,uDAAS;IAAA,4DAAM;;;IAAf,0DAAS;IAAT,6EAAS;;;IAO3C,sEAA8D;IAAA,qFAA0B;IAAA,4DAAM;;;IADlG,0EACI;IAAA,sHAA8D;IAClE,4DAAM;;;IADG,0DAAwD;IAAxD,yHAAwD;;;IAO7D,sEAA6D;IAAA,oFAAyB;IAAA,4DAAM;;;IADhG,0EACI;IAAA,uHAA6D;IACjE,4DAAM;;;IADG,0DAAuD;IAAvD,wHAAuD;;;IAO5D,sEAA8D;IAAA,mFAAwB;IAAA,4DAAM;;;IADhG,0EACI;IAAA,uHAA8D;IAClE,4DAAM;;;IADG,0DAAwD;IAAxD,yHAAwD;;;IAO7D,sEAA8D;IAAA,kFAAuB;IAAA,4DAAM;;;IAD/F,0EACI;IAAA,uHAA8D;IAClE,4DAAM;;;IADG,0DAAwD;IAAxD,yHAAwD;;;IAK7D,sEAA2E;;;ADvBhF,MAAM,mBAAmB;IAS9B,YAAoB,WAAwB,EAAS,KAAqB,EAAS,MAAc,EAAS,OAAwB;QAA9G,gBAAW,GAAX,WAAW,CAAa;QAAS,UAAK,GAAL,KAAK,CAAgB;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAiB;QANlI,YAAO,GAAE,KAAK,CAAC;QACf,cAAS,GAAC,KAAK,CAAC;IAMf,CAAC;IAEF,QAAQ;QACN,IAAI,CAAC,WAAW,GAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,WAAW,EAAE,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YACrC,UAAU,EAAE,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YACpC,WAAW,EAAE,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YACrC,WAAW,EAAE,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;SACtC,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC;QACpB,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,EAAC;YAC3B,OAAO;SACR;QACD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC;QAClB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,EAClE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,EAC1C,GAAG,GAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,GAAC,GAAG,EACnD,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,QAAQ,GAAE;YAC/D,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,EAAE,EAAE,kBAAkB,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;gBACrE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACnC,CAAC,CAAC,CAAC;QACL,CAAC,EAAC,GAAG,GAAE,GAAC,IAAI,CAAC,SAAS,GAAC,KAAK,CAAC,KAAI,CAAC,OAAO,GAAC,KAAK,CAAC,KAAI,CAAC,KAAK,GAAC,GAAG,CAAC,OAAO,IAAE,GAAG,CAAC,EAAC,CAAC,CAAC;IACjF,CAAC;;sFAnCU,mBAAmB;mGAAnB,mBAAmB;QCVhC,+GAA8C;QAC9C,yEACA;QAAA,0EACI;QADuC,+IAAY,YAAQ,IAAC;QAC5D,yEACI;QAAA,2EAAyB;QAAA,yEAAQ;QAAA,uEAAY;QAAA,4DAAS;QAAA,4DAAQ;QAC9D,sEACA;QAAA,+GACI;QAER,4DAAM;QACN,yEACI;QAAA,4EAAwB;QAAA,0EAAQ;QAAA,uEAAW;QAAA,4DAAS;QAAA,4DAAQ;QAC5D,uEACA;QAAA,iHACI;QAER,4DAAM;QACN,0EACI;QAAA,4EAAyB;QAAA,0EAAQ;QAAA,yEAAa;QAAA,4DAAS;QAAA,4DAAQ;QAC/D,wEACA;QAAA,iHACI;QAER,4DAAM;QACN,0EACI;QAAA,6EAAyB;QAAA,0EAAQ;QAAA,+EAAmB;QAAA,4DAAS;QAAA,4DAAQ;QACrE,wEACA;QAAA,iHACI;QAER,4DAAM;QACN,2EACI;QAAA,8EACI;QAAA,oHAAoE;QACpE,oEACJ;QAAA,4DAAS;QACT,yEAA2C;QAAA,kEAAM;QAAA,4DAAI;QACzD,4DAAM;QACV,4DAAO;QACP,4DAAM;;QAvCD,2EAAa;QAED,0DAAyB;QAAzB,sFAAyB;QAGoC,0DAAkF;QAAlF,yMAAkF;QACnJ,0DAA4D;QAA5D,8HAA4D;QAMG,0DAAiF;QAAjF,wMAAiF;QAChJ,0DAA2D;QAA3D,6HAA2D;QAMM,0DAAkF;QAAlF,yMAAkF;QACnJ,0DAA4D;QAA5D,8HAA4D;QAMK,0DAAkF;QAAlF,yMAAkF;QACnJ,0DAA4D;QAA5D,8HAA4D;QAKzD,0DAAoB;QAApB,iFAAoB;QAClB,0DAAe;QAAf,6EAAe;;6FDvBpB,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;ICUtC,qEACI;IAAA,qEAAI;IAAA,uDAAa;IAAA,4DAAK;IACtB,qEAAI;IAAA,uDAAoB;IAAA,4DAAK;IAC7B,qEAAI;IAAA,uEAAqC;IAAA,uDAAY;IAAA,4DAAI;IAAA,4DAAK;IAClE,4DAAK;;;IAHG,0DAAa;IAAb,6EAAa;IACb,0DAAoB;IAApB,oFAAoB;IACjB,0DAAmB;IAAnB,qJAAmB;IAAe,0DAAY;IAAZ,4EAAY;;ADL9D,MAAM,aAAa;IAKxB,YAAoB,OAAuB;QAAvB,YAAO,GAAP,OAAO,CAAgB;QAJ3C,aAAQ,GAAU,EAAG,CAAC;QACtB,cAAS,GAAU,EAAG,CAAC;QACvB,oBAAe,GAAG,CAAC,CAAC,CAAC;QAGlB,OAAO,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,MAAM,GAAE;YAC9C,IAAI,CAAC,QAAQ,GAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACrC,CAAC,CAAC;IACL,CAAC;IAED,UAAU,CAAC,KAAK,EAAC,OAAO;QACtB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,IAAI,IAAI,CAAC,eAAe,KAAK,KAAK,EAAC;YACjC,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC;SAC3B;aACI;YACH,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;SAC9B;IACH,CAAC;IAED,GAAG;QACD,OAAO,CAAC,GAAG,EAAE,CAAC;IAChB,CAAC;IACD,QAAQ;IACR,CAAC;;0EA1BU,aAAa;6FAAb,aAAa;QCP1B,sEACI;QAAA,yEACI;QAAA,2EACI;QAAA,wEACI;QAAA,qEAAI;QAAA,uEAAY;QAAA,4DAAK;QACrB,qEAAI;QAAA,sEAAW;QAAA,4DAAK;QACpB,qEAAI;QAAA,8DAAG;QAAA,4DAAK;QAChB,4DAAQ;QACZ,yEACI;QAAA,yGACI;QAIR,4DAAQ;QACZ,4DAAQ;QACR,4DAAM;QACV,4DAAM;;QARU,2DAA+B;QAA/B,iFAA+B;;6FDFlC,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEf;;;;;;;;;;;;ICKD,gFAAqB;;;IAerB,uEAAY;;;IAcZ,8EAAmB;;ADxB9C,MAAM,aAAa;IAgBxB,YAAoB,IAAgB,EAAU,SAAuB;QAAjD,SAAI,GAAJ,IAAI,CAAY;QAAU,cAAS,GAAT,SAAS,CAAc;QAdrE,aAAQ,GAAG,EAAE,CAAC;QAEd,WAAM,GAAG,EAAE,CAAC;QAEZ,iBAAY,GAAG,EAAE,CAAC;QAElB,gBAAW,GAAG,UAAU,CAAC;IAQgD,CAAC;IAE1E,cAAc,CAAC,KAAK;QAElB,MAAM,IAAI,GAAQ,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAExC,IAAI,IAAI,EAAE;YAEN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;YAE1B,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;YAEhC,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YAC9B,QAAQ,CAAC,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;YAEjD,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,+CAA+C,EAAE,QAAQ,CAAC,CAAC;YAE1F,OAAO,CAAC,SAAS,CAAC,MAAM,GAAE;gBACxB,IAAI,CAAC,YAAY,GAAI,MAAc,CAAC,IAAI,CAAC;gBACzC,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC;YAC3B,CAAC,CAAC,CAAC;YAEH,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAE9B,MAAM,CAAC,SAAS,GAAG,GAAG,EAAE;gBACtB,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,MAAM,CAAC;gBACxC,+CAA+C;gBAE/C,4EAA4E;gBAC5E,eAAe;gBACf,iBAAiB;gBACjB,KAAK;gBAEL,6DAA6D;gBAC7D,4BAA4B;gBAC5B,KAAK;YACP,CAAC,CAAC;YACF,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YAG3B,6DAA6D;YAC7D,sBAAsB;YACtB,KAAK;SAER;IACH,CAAC;IAED,MAAM;QACJ,IAAI,IAAI,CAAC,YAAY,IAAE,EAAE,EAAC;YACxB,6CAA6C;YAE7C,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gDAAgD,EAC9E,EAAC,IAAI,EAAC,IAAI,CAAC,YAAY,EAAC,CAAC,CAAC;YAE5B,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAE;gBAEzB,IAAK,MAAc,CAAC,IAAI,IAAI,IAAI,EAAC;oBAC/B,IAAI,CAAC,MAAM,GAAC,OAAO,CAAC;oBACpB,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,iDAAiD,EAChF,EAAC,IAAI,EAAC,IAAI,CAAC,YAAY,EAAC,EAAC,EAAC,YAAY,EAAC,MAAM,EAAC,CAAC,CAAC;oBAElD,SAAS,CAAC,SAAS,CAAC,MAAM,GAAE;wBACxB,uBAAuB;wBACvB,iDAAS,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;wBAErC,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;wBAE9B,MAAM,CAAC,SAAS,GAAG,GAAG,EAAE;4BACtB,IAAI,CAAC,oBAAoB,GAAG,MAAM,CAAC,MAAM,CAAC;wBAC5C,CAAC,CAAC;wBACF,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;oBAE/B,CAAC,CAAC,CAAC;iBAEN;qBAEG;oBACF,IAAI,CAAC,MAAM,GAAC,WAAW,CAAC;oBACxB,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;iBACnC;YAEH,CAAC,CAAC,CAAC;SAGJ;IAEH,CAAC;IAED,UAAU;QACR,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QAEnB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QAEjB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QAEvB,4BAA4B;QAE5B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAEpB,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;IACnC,CAAC;IAED,QAAQ;IACR,CAAC;;0EAzHU,aAAa;6FAAb,aAAa;;QCX1B,8EAGA;QAFA,4IAAU,0BAAsB,IAAC;QADjC,4DAGA;QAAA,6FACI;QAAA,2EAEI;QAAA,yHAA0B;QAC1B,iFACI;QAAA,4EAAW;QAAA,gFAAqB;QAAA,4DAAY;QAC5C,gFACI;QADQ,uLAAuB;QAC/B,iFAA8B;QAAA,qEAAS;QAAA,4DAAa;QACpD,iFAA6B;QAAA,oEAAQ;QAAA,4DAAa;QAClD,iFAAyB;QAAA,gEAAI;QAAA,4DAAa;QAC9C,4DAAa;QACjB,4DAAiB;QACjB,uEACI;QAAA,6EAAkC;QAAA,gEAAI;QAAA,4DAAS;QACnD,4DAAM;QAEV,4DAAW;QACX,4EACI;QAAA,2HAA0B;QAC1B,2EACI;QAAA,wDACA;QAAA,8EAEI;QADA,kRAAS,WAAkB,IAAC;QAC5B,4EAAU;QAAA,uEAAW;QAAA,4DAAW;QACpC,4DAAS;QACb,4DAAM;QACN,uEACI;QAAA,8EAAsC;QAAA,gEAAI;QAAA,4DAAS;QACnD,6EAAkC;QAAA,gEAAI;QAAA,4DAAS;QACnD,4DAAM;QACV,4DAAW;QACX,4EACI;QAAA,2HAA0B;QAC1B,uEACI;QAAA,wDACJ;QAAA,4DAAM;QACN,8EAA2B;QAAnB,sIAAS,YAAQ,IAAC;QAAC,+EAAmB;QAAA,4DAAS;QACvD,uEACI;QACA,8EAA2D;QAAxC,2QAAS,WAAe,SAAC,gBAAY,IAAE;QAAC,iEAAK;QAAA,4DAAS;QAC7E,4DAAM;QACV,4DAAW;QACf,4DAAuB;QAKvB,qFAEI;QAAA,iFACI;QAAA,gFACI;QAAA,mFACI;QAAA,kFAAgB;QAAA,2EAAe;QAAA,4DAAiB;QACpD,4DAAkB;QAClB,2EACI;QAAA,sEACJ;QAAA,4DAAM;QACV,4DAAW;QACf,4DAAgB;QAGhB,iFACI;QAAA,gFACI;QAAA,mFACI;QAAA,kFAAgB;QAAA,6EAAiB;QAAA,4DAAiB;QACtD,4DAAkB;QAClB,2EACI;QAAA,sEACJ;QAAA,4DAAM;QACV,4DAAW;QACf,4DAAgB;QAEpB,4DAAgB;;QAlEQ,0DAAuB;QAAvB,kFAAuB;QAcnC,2DACA;QADA,oHACA;QAaA,2DACJ;QADI,8FACJ;QAoBa,2DAA0B;QAA1B,+JAA0B;QAY1B,0DAA4B;QAA5B,iKAA4B;;6FD3DpC,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;;;;;;;ICDpE,0EAA8C;IAAA,uDAAS;IAAA,4DAAM;;;IAAf,0DAAS;IAAT,6EAAS;;;IASvC,sEAAyD;IAAA,+EAAoB;IAAA,4DAAM;;;IADvF,0EACI;IAAA,iHAAyD;IAC7D,4DAAM;;;IADG,0DAAmD;IAAnD,oHAAmD;;;IAQxD,sEAAyD;IAAA,+EAAoB;IAAA,4DAAM;;;IADvF,0EACI;IAAA,kHAAyD;IAC7D,4DAAM;;;IADG,0DAAmD;IAAnD,oHAAmD;;;IAKxD,sEAA2E;;;ADZpF,MAAM,cAAc;IAQzB,YAAoB,WAAwB,EAAS,KAAqB,EAAS,MAAc,EAAS,OAAmB;QAAzG,gBAAW,GAAX,WAAW,CAAa;QAAS,UAAK,GAAL,KAAK,CAAgB;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAY;QAL7H,YAAO,GAAE,KAAK,CAAC;QACf,cAAS,GAAC,KAAK,CAAC;IAKf,CAAC;IAEF,QAAQ;QACN,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACpC,QAAQ,EAAE,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YAClC,QAAQ,EAAE,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;SACnC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC;IACrE,CAAC;IAED,KAAK;QACH,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC;QACpB,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAC;YACzB,OAAO;SACR;QACD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC;QAClB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,EAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,QAAQ,GAAE;YACpH,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;YACvB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QACzC,CAAC,EAAC,GAAG,GAAE,GAAC,IAAI,CAAC,SAAS,GAAC,KAAK,CAAC,KAAI,CAAC,OAAO,GAAC,KAAK,CAAC,KAAI,CAAC,KAAK,GAAC,GAAG,CAAC,OAAO,IAAE,GAAG,CAAC,EAAC,CAAC,CAAC;IACjF,CAAC;;4EA7BU,cAAc;8FAAd,cAAc;QCV3B,0GAA8C;QAC9C,yEACI;QAAA,0EACI;QADqC,0IAAY,WAAO,IAAC;QACzD,uEAAmB;QAAA,kEAAO;QAAA,4DAAI;QAC9B,yEACI;QAAA,2EAAsB;QAAA,mEAAQ;QAAA,4DAAQ;QACtC,sEAEA;QAAA,0GACI;QAER,4DAAM;QACN,0EACI;QAAA,4EAAsB;QAAA,oEAAQ;QAAA,4DAAQ;QACtC,uEAEA;QAAA,4GACI;QAER,4DAAM;QACN,0EACI;QAAA,8EACI;QAAA,+GAAoE;QACpE,mEACJ;QAAA,4DAAS;QACT,yEAA+C;QAAA,+EAAmB;QAAA,4DAAI;QAC1E,4DAAM;QACV,4DAAO;QACX,4DAAM;;QA5BD,2EAAa;QAEG,0DAAuB;QAAvB,oFAAuB;QAKhC,0DAA6E;QAA7E,mMAA6E;QACxE,0DAAuD;QAAvD,yHAAuD;QAO5D,0DAA6E;QAA7E,oMAA6E;QACxE,0DAAuD;QAAvD,yHAAuD;QAKvC,0DAAoB;QAApB,iFAAoB;QAC/B,0DAAe;QAAf,6EAAe;;6FDZxB,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAIsB;;;;;;;;ICY5D,qEACI;IAAA,qEAAI;IAAA,uDAAa;IAAA,4DAAK;IACtB,qEAAI;IAAA,uDAAoB;IAAA,4DAAK;IAC7B,qEAAI;IAAA,uEAAqC;IAAA,uDAAY;IAAA,4DAAI;IAAA,4DAAK;IAC9D,qEAAI;IAAA,uDAAqB;IAAA,4DAAK;IAC9B,sEAAI;IAAA,wDAAkB;IAAA,4DAAK;IAC3B,sEAAI;IAAA,wDAAsB;IAAA,4DAAK;IAC/B,iEAAS;IACT,sEAAI;IAAA,6EAAwD;IAA5B,mWAA2B;IAAC,mEAAO;IAAA,4DAAS;IAAA,4DAAK;IACjF,sEAAI;IAAA,6EAAsD;IAA3B,kWAA0B;IAAC,kEAAM;IAAA,4DAAS;IAAA,4DAAK;IAClF,4DAAK;;;IATG,0DAAa;IAAb,6EAAa;IACb,0DAAoB;IAApB,oFAAoB;IACjB,0DAAmB;IAAnB,qJAAmB;IAAe,0DAAY;IAAZ,4EAAY;IACjD,0DAAqB;IAArB,qFAAqB;IACrB,0DAAkB;IAAlB,kFAAkB;IAClB,0DAAsB;IAAtB,sFAAsB;;;;IAqB9B,qEACI;IAAA,qEAAI;IAAA,uDAAa;IAAA,4DAAK;IACtB,qEAAI;IAAA,uDAAoB;IAAA,4DAAK;IAC7B,qEAAI;IAAA,uEAAqC;IAAA,uDAAY;IAAA,4DAAI;IAAA,4DAAK;IAC9D,qEAAI;IAAA,uDAAqB;IAAA,4DAAK;IAC9B,sEAAI;IAAA,wDAAkB;IAAA,4DAAK;IAC3B,sEAAI;IAAA,wDAAsB;IAAA,4DAAK;IAC/B,sEAAI;IAAA,wDAAoB;IAAA,4DAAK;IAC7B,sEAAI;IAAA,8EAA8D;IAAvB,8VAAsB;IAAC,kEAAM;IAAA,4DAAS;IAAA,4DAAK;IACtF,sEAAI;IAAA,6EAAsD;IAA3B,kWAA0B;IAAC,kEAAM;IAAA,4DAAS;IAAA,4DAAK;IAClF,4DAAK;;;IATG,0DAAa;IAAb,6EAAa;IACb,0DAAoB;IAApB,oFAAoB;IACjB,0DAAmB;IAAnB,qJAAmB;IAAe,0DAAY;IAAZ,4EAAY;IACjD,0DAAqB;IAArB,qFAAqB;IACrB,0DAAkB;IAAlB,kFAAkB;IAClB,0DAAsB;IAAtB,sFAAsB;IACtB,0DAAoB;IAApB,oFAAoB;;ADvCjC,MAAM,sBAAsB;IAQjC,YAAoB,OAAuB,EAAU,KAAqB,EAAU,MAAc,EAAS,MAAiB;QAAxG,YAAO,GAAP,OAAO,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAS,WAAM,GAAN,MAAM,CAAW;QAP5H,aAAQ,GAAU,EAAG,CAAC;QACtB,YAAO,GAAU,EAAG,CAAC;QACrB,aAAQ,GAAU,EAAG,CAAC;QACtB,oBAAe,GAAG,CAAC,CAAC,CAAC;QAKnB,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,MAAM,CAAC,EAAE;QACP,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,QAAQ,GAAE;YACjD,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,uBAAuB;QACzB,CAAC,EACC,GAAG,GAAE,GAAC,IAAI,CAAC,KAAK,GAAC,GAAG,CAAC,OAAO,IAAE,GAAG,CAAC,EAAC,CAAC,CAAC;QACrC,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAED,MAAM,CAAC,IAAI;QACT,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mFAAkB,EAAE;YACrD,KAAK,EAAE,OAAO;YACd,MAAM,EAAE,OAAO;YACf,IAAI,EAAE,EAAC,IAAI,EAAG,IAAI,EAAC;SACpB,CAAC,CAAC;QACH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzC,OAAO,CAAC,GAAG,CAAC,kBAAkB,MAAM,EAAE,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;IAEL,CAAC;IACD,OAAO,CAAC,EAAE;QACR,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,QAAQ,GAAE;YAClD,yBAAyB;YACzB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,CAAC,EACD,GAAG,GAAE,GAAC,IAAI,CAAC,KAAK,GAAC,GAAG,CAAC,OAAO,IAAE,GAAG,CAAC,EAAC,CAAC,CAAC;QACrC,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IACD,MAAM,CAAC,EAAE;QACP,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,QAAQ,GAAE;YACjD,uBAAuB;YACvB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,CAAC,EACD,GAAG,GAAE,GAAC,IAAI,CAAC,KAAK,GAAC,GAAG,CAAC,OAAO,IAAE,GAAG,CAAC,EAAC,CAAC,CAAC;QACrC,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAED,UAAU;QACR,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,MAAM,GAAE;YAC9C,IAAI,CAAC,OAAO,GAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;YAClC,IAAI,CAAC,QAAQ,GAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;YACnC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAChC,OAAO,GAAE,QAAO,CAAC,KAAK,IAAE,SAAS,CAAC,CAAC;YACrC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAClC,OAAO,GAAE,QAAO,CAAC,KAAK,IAAE,UAAU,CAAC,CAAC;QACxC,CAAC,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC;IACrE,CAAC;;4FA9DU,sBAAsB;sGAAtB,sBAAsB;QCXnC,sEACI;QAAA,yEACI;QAAA,qEAAI;QAAA,yEAAQ;QAAA,kEAAO;QAAA,4DAAS;QAAA,4DAAK;QACjC,2EACI;QAAA,wEACI;QAAA,wEAAwB;QAAA,uEAAY;QAAA,4DAAK;QACzC,wEAAwB;QAAA,uEAAW;QAAA,4DAAK;QACxC,yEAAwB;QAAA,+DAAG;QAAA,4DAAK;QAChC,yEAAwB;QAAA,yEAAa;QAAA,4DAAK;QAC1C,yEAAwB;QAAA,qEAAS;QAAA,4DAAK;QACtC,yEAAwB;QAAA,0EAAc;QAAA,4DAAK;QAC3C,oEAA6B;QAC7B,oEAA6B;QAC7B,oEAA6B;QACjC,4DAAQ;QACZ,yEACI;QAAA,mHACI;QAUR,4DAAQ;QACZ,4DAAQ;QACR,sEAAI;QAAA,0EAAQ;QAAA,oEAAQ;QAAA,4DAAS;QAAA,4DAAK;QAC9B,4EACI;QAAA,yEACI;QAAA,yEAAwB;QAAA,wEAAY;QAAA,4DAAK;QACzC,yEAAwB;QAAA,uEAAW;QAAA,4DAAK;QACxC,yEAAwB;QAAA,+DAAG;QAAA,4DAAK;QAChC,yEAAwB;QAAA,yEAAa;QAAA,4DAAK;QAC1C,yEAAwB;QAAA,qEAAS;QAAA,4DAAK;QACtC,yEAAwB;QAAA,0EAAc;QAAA,4DAAK;QAC3C,yEAAwB;QAAA,wEAAY;QAAA,4DAAK;QACzC,oEAA6B;QAC7B,oEAA6B;QACjC,4DAAQ;QACZ,yEACI;QAAA,mHACI;QAUR,4DAAQ;QACZ,4DAAQ;QACR,4DAAM;QACV,4DAAM;;QAzCU,2DAA8B;QAA9B,gFAA8B;QA2B9B,2DAA+B;QAA/B,iFAA+B;;6FDhClC,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAC9C;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEf;;;;;;;;;IC+CD,gFAAqB;;;IAerB,uEAAY;;;IAcZ,8EAAmB;;ADpE9C,MAAM,eAAe;IAU1B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QARpC,aAAQ,GAAG,EAAE,CAAC;QAEd,WAAM,GAAG,EAAE,CAAC;QAEZ,iBAAY,GAAG,EAAE,CAAC;QAElB,gBAAW,GAAG,UAAU,CAAC;IAEe,CAAC;IAEzC,cAAc,CAAC,KAAK;QAElB,MAAM,IAAI,GAAQ,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAExC,IAAI,IAAI,EAAE;YAEN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;YAE1B,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;YAEhC,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YAC9B,QAAQ,CAAC,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;YAEjD,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,iDAAiD,EAAE,QAAQ,CAAC,CAAC;YAE5F,OAAO,CAAC,SAAS,CAAC,MAAM,GAAE;gBACxB,IAAI,CAAC,YAAY,GAAI,MAAc,CAAC,IAAI,CAAC;gBACzC,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC;YAC3B,CAAC,CAAC,CAAC;SACN;IACH,CAAC;IAED,MAAM;QACJ,IAAI,IAAI,CAAC,YAAY,IAAE,EAAE,EAAC;YACxB,6CAA6C;YAE7C,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,kDAAkD,EAChF,EAAC,IAAI,EAAC,IAAI,CAAC,YAAY,EAAC,CAAC,CAAC;YAE5B,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAE;gBAEzB,IAAK,MAAc,CAAC,IAAI,IAAI,IAAI,EAAC;oBAC/B,IAAI,CAAC,MAAM,GAAC,OAAO,CAAC;oBACpB,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,mDAAmD,EAClF,EAAC,IAAI,EAAC,IAAI,CAAC,YAAY,EAAC,EAAC,EAAC,YAAY,EAAC,MAAM,EAAC,CAAC,CAAC;oBAElD,SAAS,CAAC,SAAS,CAAC,MAAM,GAAE;wBACxB,uBAAuB;wBACvB,iDAAS,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;oBACvC,CAAC,CAAC,CAAC;iBAEN;qBAEG;oBACF,IAAI,CAAC,MAAM,GAAC,WAAW,CAAC;oBACxB,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;iBACnC;YAEH,CAAC,CAAC,CAAC;SAGJ;IAEH,CAAC;IAED,YAAY;IACZ,gCAAgC;IAChC,iDAAiD;IAEjD,6FAA6F;IAC7F,yDAAyD;IAGzD,oCAAoC;IACpC,+BAA+B;IAC/B,iEAAiE;IACjE,gDAAgD;IAChD,YAAY;IACZ,MAAM;IAEN,IAAI;IAGJ,QAAQ;IACR,CAAC;;8EAtFU,eAAe;+FAAf,eAAe;;QCT5B,8EAGA;QAFA,8IAAU,0BAAsB,IAAC;QADjC,4DAGA;QA0CA,6FACI;QAAA,2EAEI;QAAA,2HAA0B;QAC1B,iFACI;QAAA,4EAAW;QAAA,gFAAqB;QAAA,4DAAY;QAC5C,gFACI;QADQ,yLAAuB;QAC/B,iFAA8B;QAAA,qEAAS;QAAA,4DAAa;QACpD,iFAA6B;QAAA,oEAAQ;QAAA,4DAAa;QAClD,iFAAyB;QAAA,gEAAI;QAAA,4DAAa;QAC9C,4DAAa;QACjB,4DAAiB;QACjB,uEACI;QAAA,6EAAkC;QAAA,gEAAI;QAAA,4DAAS;QACnD,4DAAM;QAEV,4DAAW;QACX,4EACI;QAAA,6HAA0B;QAC1B,2EACI;QAAA,wDACA;QAAA,8EAEI;QADA,oRAAS,WAAkB,IAAC;QAC5B,4EAAU;QAAA,uEAAW;QAAA,4DAAW;QACpC,4DAAS;QACb,4DAAM;QACN,uEACI;QAAA,8EAAsC;QAAA,gEAAI;QAAA,4DAAS;QACnD,6EAAkC;QAAA,gEAAI;QAAA,4DAAS;QACnD,4DAAM;QACV,4DAAW;QACX,4EACI;QAAA,6HAA0B;QAC1B,uEACI;QAAA,wDACJ;QAAA,4DAAM;QACN,8EAA2B;QAAnB,wIAAS,YAAQ,IAAC;QAAC,+EAAmB;QAAA,4DAAS;QACvD,uEACI;QACA,8EAA6C;QAA1B,oRAAS,WAAe,IAAC;QAAC,iEAAK;QAAA,4DAAS;QAC/D,4DAAM;QACV,4DAAW;QACf,4DAAuB;;QApCC,0DAAuB;QAAvB,kFAAuB;QAcnC,2DACA;QADA,oHACA;QAaA,2DACJ;QADI,8FACJ;;6FDvEK,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkE;AAGC;;;;;;;ICWnD,qEACI;IAAA,qEAAI;IAAA,uDAAa;IAAA,4DAAK;IACtB,qEAAI;IAAA,uDAAoB;IAAA,4DAAK;IAC7B,qEAAI;IAAA,uDAAqB;IAAA,4DAAK;IAC9B,qEAAI;IAAA,uEAAqC;IAAA,uDAAY;IAAA,4DAAI;IAAA,4DAAK;IAC9D,sEAAI;IAAA,6EAAuI;IAA1B,8VAAyB;IAAC,wEAAY;IAAA,4DAAS;IAAA,4DAAK;IAGzK,4DAAK;;;IAPG,0DAAa;IAAb,6EAAa;IACb,0DAAoB;IAApB,oFAAoB;IACpB,0DAAqB;IAArB,qFAAqB;IAClB,0DAAmB;IAAnB,qJAAmB;IAAe,0DAAY;IAAZ,4EAAY;;ADPlE,MAAM,mBAAmB;IAQ9B,YAAoB,OAAuB,EAAS,MAAiB;QAAjD,YAAO,GAAP,OAAO,CAAgB;QAAS,WAAM,GAAN,MAAM,CAAW;QANrE,aAAQ,GAAU,EAAG,CAAC;QACtB,cAAS,GAAU,EAAG,CAAC;QACvB,oBAAe,GAAG,CAAC,CAAC,CAAC;QAErB,WAAM,GAAQ,EAAG,CAAC;QAGhB,OAAO,CAAC,oBAAoB,EAAE,CAAC,SAAS,CAAC,MAAM,GAAE;YAC9C,IAAI,CAAC,QAAQ,GAAC,MAAM,CAAC,IAAI,CAAC;QAC7B,CAAC,CAAC;IACJ,CAAC;IAED,UAAU,CAAC,KAAK,EAAE,OAAO;QACvB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,IAAI,IAAI,CAAC,eAAe,KAAK,KAAK,EAAC;YACjC,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC;SAC3B;aACI;YACH,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;SAC9B;IACH,CAAC;IACD,SAAS,CAAC,IAAI;QACZ,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,GAAE;YACtD,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC;YACrB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,8EAAiB,EAAE;gBACpD,KAAK,EAAE,OAAO;gBACd,MAAM,EAAE,OAAO;gBACf,IAAI,EAAE,EAAC,IAAI,EAAG,IAAI,CAAC,MAAM,EAAC;aAC3B,CAAC,CAAC;QACL,CAAC,CAAC;IACJ,CAAC;IAED,QAAQ;IACR,CAAC;;sFApCU,mBAAmB;mGAAnB,mBAAmB;QCVhC,sEACI;QAAA,yEACI;QAAA,2EACI;QAAA,wEACI;QAAA,qEAAI;QAAA,uEAAY;QAAA,4DAAK;QACrB,qEAAI;QAAA,sEAAW;QAAA,4DAAK;QACpB,qEAAI;QAAA,wEAAa;QAAA,4DAAK;QACtB,sEAAI;QAAA,+DAAG;QAAA,4DAAK;QACZ,iEAAS;QAGb,4DAAQ;QACR,yEACI;QAAA,gHACI;QAQR,4DAAQ;QACZ,4DAAQ;QACZ,4DAAM;QACV,4DAAM;;QAZc,2DAA+B;QAA/B,iFAA+B;;6FDHtC,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;ICclC,qEACI;IAAA,qEAAI;IAAA,uDAAa;IAAA,4DAAK;IACtB,qEAAI;IAAA,uDAAoB;IAAA,4DAAK;IAC7B,qEAAI;IAAA,uDAAqB;IAAA,4DAAK;IAC9B,qEAAI;IAAA,uEAAqC;IAAA,uDAAY;IAAA,4DAAI;IAAA,4DAAK;IAC9D,sEAAI;IAAA,wDAAc;IAAA,4DAAK;IACvB,sEAAI;IAAA,wDAAmB;IAAA,4DAAK;IAGhC,4DAAK;;;IARG,0DAAa;IAAb,6EAAa;IACb,0DAAoB;IAApB,oFAAoB;IACpB,0DAAqB;IAArB,qFAAqB;IAClB,0DAAmB;IAAnB,qJAAmB;IAAe,0DAAY;IAAZ,4EAAY;IACjD,0DAAc;IAAd,8EAAc;IACd,0DAAmB;IAAnB,mFAAmB;;ADZpC,MAAM,mBAAmB;IAM9B,YAAoB,OAAuB;QAAvB,YAAO,GAAP,OAAO,CAAgB;QAL3C,aAAQ,GAAU,EAAG,CAAC;QACtB,cAAS,GAAU,EAAG,CAAC;QACvB,oBAAe,GAAG,CAAC,CAAC,CAAC;QAInB,OAAO,CAAC,oBAAoB,EAAE,CAAC,SAAS,CAAC,MAAM,GAAE;YAC/C,IAAI,CAAC,QAAQ,GAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACrC,CAAC,CAAC;IACJ,CAAC;IAED,UAAU,CAAC,KAAK,EAAE,OAAO;QACvB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,IAAI,IAAI,CAAC,eAAe,KAAK,KAAK,EAAC;YACjC,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC;SAC3B;aACI;YACH,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;SAC9B;IACH,CAAC;IAED,MAAM,CAAC,EAAE;QACP,0CAA0C;QAC1C,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,GAAE;YAAC,IAAI,CAAC,KAAK,GAAC,GAAG,CAAC,OAAO,IAAE,GAAG,CAAC;YACzE,IAAI,CAAC,OAAO,CAAC,oBAAoB,EAAE,CAAC,SAAS,CAAC,MAAM,GAAE;gBACpD,IAAI,CAAC,QAAQ,GAAC,MAAM,CAAC,IAAI,CAAC;YAC5B,CAAC,CAAC;QAAA,CAAC,CACF,CAAC;IACN,CAAC;IACD,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,WAAW,EAAE,WAAW;QAC5C,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC1B,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAG,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;IAC7D,CAAC;IACD,QAAQ;IACR,CAAC;;sFApCU,mBAAmB;mGAAnB,mBAAmB;QCRhC,sEACI;QAAA,yEACI;QAAA,2EACI;QAAA,wEACI;QAAA,qEAAI;QAAA,uEAAY;QAAA,4DAAK;QACrB,qEAAI;QAAA,sEAAW;QAAA,4DAAK;QACpB,qEAAI;QAAA,wEAAa;QAAA,4DAAK;QACtB,sEAAI;QAAA,+DAAG;QAAA,4DAAK;QACZ,sEAAI;QAAA,iEAAK;QAAA,4DAAK;QACd,sEAAI;QAAA,gFAAoB;QAAA,4DAAK;QAGjC,4DAAQ;QACR,yEACI;QAAA,gHACI;QASR,4DAAQ;QACZ,4DAAQ;QACZ,4DAAM;QACV,4DAAM;;QAbc,2DAA+B;QAA/B,iFAA+B;;6FDNtC,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;;;;;;;ICDpE,0EAA8C;IAAA,uDAAS;IAAA,4DAAM;;;IAAf,0DAAS;IAAT,6EAAS;;;IASvC,sEAA4D;IAAA,+EAAoB;IAAA,4DAAM;;;IAD1F,0EACI;IAAA,oHAA4D;IAChE,4DAAM;;;IADG,0DAAsD;IAAtD,uHAAsD;;;IAQ3D,sEAA4D;IAAA,+EAAoB;IAAA,4DAAM;;;IAD1F,0EACI;IAAA,qHAA4D;IAChE,4DAAM;;;IADG,0DAAsD;IAAtD,uHAAsD;;;IAK3D,sEAA2E;;;ADZpF,MAAM,iBAAiB;IAQ5B,YAAoB,WAAwB,EAAS,KAAqB,EAAS,MAAc,EAAS,OAAmB;QAAzG,gBAAW,GAAX,WAAW,CAAa;QAAS,UAAK,GAAL,KAAK,CAAgB;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAY;QAL7H,YAAO,GAAE,KAAK,CAAC;QACf,cAAS,GAAC,KAAK,CAAC;IAKf,CAAC;IAEF,QAAQ;QACN,IAAI,CAAC,YAAY,GAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACvC,QAAQ,EAAE,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YAClC,QAAQ,EAAE,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;SACnC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC;IACrE,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC;QACpB,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,EAAC;YAC5B,OAAO;SACR;QACD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC;QAClB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,EAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,QAAQ,GAAE;YAC3H,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QACzC,CAAC,EAAC,GAAG,GAAE,GAAC,IAAI,CAAC,SAAS,GAAC,KAAK,CAAC,KAAI,CAAC,OAAO,GAAC,KAAK,CAAC,KAAI,CAAC,KAAK,GAAC,GAAG,CAAC,OAAO,IAAE,GAAG,CAAC,EAAC,CAAC,CAAC;IACjF,CAAC;;kFA5BU,iBAAiB;iGAAjB,iBAAiB;QCV9B,6GAA8C;QAC9C,yEACI;QAAA,0EACI;QADwC,6IAAY,YAAQ,IAAC;QAC7D,uEAAmB;QAAA,kEAAO;QAAA,4DAAI;QAC9B,yEACI;QAAA,2EAAsB;QAAA,mEAAQ;QAAA,4DAAQ;QACtC,sEAEA;QAAA,6GACI;QAER,4DAAM;QACN,0EACI;QAAA,4EAAsB;QAAA,oEAAQ;QAAA,4DAAQ;QACtC,uEAEA;QAAA,+GACI;QAER,4DAAM;QACN,0EACI;QAAA,8EACI;QAAA,kHAAoE;QACpE,sEACJ;QAAA,4DAAS;QACT,yEAA4C;QAAA,+EAAmB;QAAA,4DAAI;QACvE,4DAAM;QACV,4DAAO;QACX,4DAAM;;QA5BD,2EAAa;QAEG,0DAA0B;QAA1B,uFAA0B;QAKnC,0DAAgF;QAAhF,sMAAgF;QAC3E,0DAA0D;QAA1D,4HAA0D;QAO/D,0DAAgF;QAAhF,uMAAgF;QAC3E,0DAA0D;QAA1D,4HAA0D;QAKvD,0DAAoB;QAApB,iFAAoB;QAClB,0DAAe;QAAf,6EAAe;;6FDZxB,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;;;;;;;ICApE,0EAA8C;IAAA,uDAAS;IAAA,4DAAM;;;IAAf,0DAAS;IAAT,6EAAS;;;IAS3C,sEAA6D;IAAA,qFAA0B;IAAA,4DAAM;;;IADjG,0EACI;IAAA,0HAA6D;IACjE,4DAAM;;;IADG,0DAAuD;IAAvD,wHAAuD;;;IAQ5D,sEAA4D;IAAA,oFAAyB;IAAA,4DAAM;;;IAD/F,0EACI;IAAA,0HAA4D;IAChE,4DAAM;;;IADG,0DAAsD;IAAtD,uHAAsD;;;IAQ3D,sEAA6D;IAAA,mFAAwB;IAAA,4DAAM;;;IAD/F,0EACI;IAAA,0HAA6D;IACjE,4DAAM;;;IADG,0DAAuD;IAAvD,wHAAuD;;;IAQ5D,sEAA6D;IAAA,kFAAuB;IAAA,4DAAM;;;IAD9F,0EACI;IAAA,0HAA6D;IACjE,4DAAM;;;IADG,0DAAuD;IAAvD,wHAAuD;;;IAK5D,sEAA2E;;;AD7BhF,MAAM,sBAAsB;IAcjC,YAAoB,WAAwB,EAAS,KAAqB,EAAS,MAAc,EAAS,OAAwB;QAA9G,gBAAW,GAAX,WAAW,CAAa;QAAS,UAAK,GAAL,KAAK,CAAgB;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAiB;QAblI,UAAK,GAAU,EAAG,CAAC;QAEnB,YAAO,GAAE,KAAK,CAAC;QACf,cAAS,GAAC,KAAK,CAAC;IAWf,CAAC;IAEF,QAAQ;QACN,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACrC,WAAW,EAAE,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YACrC,UAAU,EAAE,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YACpC,WAAW,EAAE,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YACrC,WAAW,EAAE,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;SACtC,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;QACnC,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QACjC,IAAI,CAAC,GAAG,GAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;QAC1C,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;QACzC,IAAI,CAAC,KAAK,GAAG,CAAC;gBACZ,MAAM,EAAE,IAAI,CAAC,IAAI;gBACjB,aAAa,EAAE,IAAI,CAAC,QAAQ;gBAC5B,KAAK,EAAE,IAAI,CAAC,GAAG;gBACf,cAAc,EAAE,IAAI,CAAC,WAAW;aACnC,CAAE,CAAC;QACF,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC;IACrE,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC;QACpB,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,EAAC;YAC1B,OAAO;SACR;QACD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC;QAClB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,EAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,EAC9E,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,EACzC,GAAG,GAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,GAAC,GAAG,EAClD,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,QAAQ,GAAE;YAChE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QACzC,CAAC,EAAC,GAAG,GAAE,GAAC,IAAI,CAAC,SAAS,GAAC,KAAK,CAAC,KAAI,CAAC,OAAO,GAAC,KAAK,CAAC,KAAI,CAAC,KAAK,GAAC,GAAG,CAAC,OAAO,IAAE,GAAG,CAAC,EAAC,CAAC,CAAC;IACjF,CAAC;;4FAlDU,sBAAsB;sGAAtB,sBAAsB;QCTnC,kHAA8C;QAC9C,yEACA;QAAA,qEAAI;QAAA,yEAAc;QAAA,4DAAK;QACvB,0EACI;QADsC,kJAAY,YAAQ,IAAC;QAC3D,yEACI;QAAA,2EAAyB;QAAA,yEAAc;QAAA,4DAAQ;QAC/C,8EAEA;QADqB,wLAAkB;QADvC,4DAEA;QAAA,oHACI;QAER,4DAAM;QACN,0EACI;QAAA,4EAAwB;QAAA,yEAAa;QAAA,4DAAQ;QAC7C,+EAEA;QADoB,wLAAiB;QADrC,4DAEA;QAAA,oHACI;QAER,4DAAM;QACN,0EACI;QAAA,6EAAyB;QAAA,wEAAY;QAAA,4DAAQ;QAC7C,gFAEA;QADqB,gMAAyB;QAD9C,4DAEA;QAAA,oHACI;QAER,4DAAM;QACN,0EACI;QAAA,6EAAyB;QAAA,uEAAW;QAAA,4DAAQ;QAC5C,gFAEA;QADqB,6LAAsB;QAD3C,4DAEA;QAAA,oHACI;QAER,4DAAM;QACN,0EACI;QAAA,8EACI;QAAA,uHAAoE;QACpE,oEACJ;QAAA,4DAAS;QACb,4DAAM;QACV,4DAAO;QACP,4DAAM;;QA3CD,2EAAa;QAGD,0DAAwB;QAAxB,qFAAwB;QAGyB,0DAAiF;QAAjF,wMAAiF;QAEtI,0DAA2D;QAA3D,6HAA2D;QAMP,0DAAgF;QAAhF,uMAAgF;QAEpI,0DAA0D;QAA1D,4HAA0D;QAML,0DAAiF;QAAjF,wMAAiF;QAEtI,0DAA2D;QAA3D,6HAA2D;QAMN,0DAAiF;QAAjF,wMAAiF;QAEtI,0DAA2D;QAA3D,6HAA2D;QAKxD,0DAAoB;QAApB,iFAAoB;QAClB,0DAAe;QAAf,6EAAe;;6FD7BpB,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAC9C;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAEkB;AACZ;;;AAK1C,MAAM,WAAW;IA0BtB,YAAoB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;QAzB3B,SAAI,GAAC,qCAAqC;QAC1C,WAAM,GAAQ,IAAI,CAAC;QACnB,SAAI,GAAU,KAAK,CAAC;QAC5B,gBAAW,GAAwB,IAAI,kDAAa,EAAU,CAAC;QAuB7D,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAtBD,IAAI,KAAK;QACP,IAAI,IAAI,CAAC,MAAM,IAAE,IAAI,EAAC;YACpB,IAAI,CAAC,MAAM,GAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC;SAC1C;QACD,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED,IAAI,KAAK,CAAC,GAAU;QAClB,IAAI,CAAC,MAAM,GAAC,GAAG,CAAC;QAChB,IAAI,GAAG,IAAE,IAAI;YACX,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;;YAEjC,YAAY,CAAC,OAAO,CAAC,OAAO,EAAC,GAAG,CAAC,CAAC;IACtC,CAAC;IACD,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,KAAK,IAAE,IAAI,CAAC;IAC1B,CAAC;IACD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAKD,oHAAoH;IACpH,qDAAqD;IACrD,SAAS;QACP,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,GAAC,WAAW,CAAC,CAAC,SAAS,CAAC,MAAM,GAAE;YACrD,iDAAiD;YACjD,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAE,SAAS,EAAC;gBAC9B,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC;aACjB;iBACG;gBACF,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC;aAC5C;QACH,CAAC,EAAC,GAAG,GAAE;YACL,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,OAAO;QACL,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,GAAC,SAAS,CAAC,CAAC,SAAS,CAAC,MAAM,GAAE;YACnD,IAAI,MAAM,CAAC,MAAM,CAAC,KAAG,MAAM,EAAC;gBAC1B,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC;aAChB;iBACG;gBACF,IAAI,CAAC,IAAI,GAAC,KAAK,CAAC;aACjB;QACH,CAAC,EAAC,GAAG,GAAE;YACL,IAAI,CAAC,IAAI,GAAC,KAAK,CAAC;QAClB,CAAC,CACA;IACH,CAAC;IAED,KAAK,CAAC,KAAa,EAAC,QAAe;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,IAAI,CAAC,IAAI,GAAC,OAAO,EAAC,EAAC,KAAK,EAAE,KAAK,EAAC,QAAQ,EAAE,QAAQ,EAAE,CAAC;aAC7E,IAAI,CAAC,0DAAG,CAAC,IAAI,GAAE;YACd,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,IAAI,CAAC,KAAK;YAC1B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC5C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QACxB,CAAC,CAAC,EAAC,iEAAU,CAAC,GAAG,GAAE,GAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,KAAI,CAAC,KAAK,GAAC,IAAI,CAAC,QAAO,uDAAU,CAAC,GAAG,CAAC,OAAO,IAAE,cAAc,CAAC,GAAC,CAAC,CAAC,CAAC;IACtH,CAAC;IAED,MAAM,CAAC,KAAa,EAAC,QAAe;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,IAAI,CAAC,IAAI,GAAC,UAAU,EAAC,EAAC,KAAK,EAAE,KAAK,EAAC,QAAQ,EAAE,QAAQ,EAAE,CAAC;aAClF,IAAI,CAAC,iEAAU,CAAC,GAAG,GAAE,GAAC,OAAO,uDAAU,CAAC,GAAG,CAAC,OAAO,IAAE,cAAc,CAAC,GAAC,CAAC,CAAC,CAAC;IAC3E,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC;QAChB,IAAI,CAAC,IAAI,GAAC,KAAK,CAAC;QAChB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;;sEA7EU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAA2C;;;AAOpC,MAAM,eAAe;IAG1B,YAAoB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;QAD3B,SAAI,GAAC,qCAAqC;QAQlD,WAAM,GAAQ,EAAG,CAAC;IAPqB,CAAC;IASxC,mBAAmB;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,GAAC,qBAAqB,CAAC,CAAC;IACxD,CAAC;IACD,oBAAoB;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,GAAC,sBAAsB,CAAC,CAAC;IACzD,CAAC;IACD,oBAAoB;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,GAAC,sBAAsB,CAAC,CAAC;IACzD,CAAC;IACD,cAAc;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,GAAC,gBAAgB,CAAC,CAAC;IACnD,CAAC;IACD,WAAW,CAAC,IAAY,EAAE,GAAW,EAAE,WAAmB,EAAE,WAAmB;QAC7E,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAC,EAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,YAAY,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAC,CAAC,CAAC;IAC/G,CAAC;IACD,cAAc,CAAC,EAAE;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAC,gBAAgB,EAAC,EAAC,EAAE,EAAE,EAAE,EAAC,CAAC,CAAC;IAC7D,CAAC;IACD,aAAa,CAAC,EAAE;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAC,eAAe,EAAC,EAAC,EAAE,EAAE,EAAE,EAAC,CAAC,CAAC;IAC5D,CAAC;IACD,aAAa,CAAC,EAAE,EAAE,IAAY,EAAE,GAAW,EAAE,WAAmB,EAAE,WAAmB;QACnF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,GAAC,EAAE,EAAC,EAAC,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,YAAY,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAC,CAAC,CAAC;IACzH,CAAC;IACD,mBAAmB,CAAC,GAAW;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAC,qBAAqB,EAAC,EAAC,GAAG,EAAE,GAAG,EAAC,CAAC,CAAC;IACpE,CAAC;IAED,aAAa,CAAC,EAAE;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAC,eAAe,EAAC,EAAC,EAAE,EAAE,EAAE,EAAC,CAAC,CAAC;IAC5D,CAAC;IACD,QAAQ,CAAC,EAAE;QACT,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IAClB,CAAC;IACD,QAAQ;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IACD,QAAQ,CAAC,IAAI,EAAE,GAAG,EAAE,WAAW,EAAE,WAAW;QAC1C,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC;QACf,IAAI,CAAC,GAAG,GAAC,GAAG,CAAC;QACb,IAAI,CAAC,MAAM,GAAC,WAAW,CAAC;QACxB,IAAI,CAAC,QAAQ,GAAC,WAAW,CAAC;IAC5B,CAAC;IACD,OAAO;QACL,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IACD,MAAM;QACJ,OAAO,IAAI,CAAC,GAAG,CAAC;IAClB,CAAC;IACD,SAAS;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IACD,WAAW;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;;8EAlEU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;6FAEP,eAAe;cAH3B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAA2C;;;AAQpC,MAAM,uBAAuB;IAElC,YAAoB,OAAmB;QAAnB,YAAO,GAAP,OAAO,CAAY;IAAI,CAAC;IAC5C,SAAS,CAAC,GAAqB,EAAE,IAAiB;QAChD,wDAAwD;QACxD,IAAI,UAAU,GAAC,GAAG,CAAC,OAAO,CAAC;QAC3B,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAC;YACrB,UAAU,GAAC,UAAU,CAAC,MAAM,CAAC,eAAe,EAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YACjE,MAAM,OAAO,GAAC,GAAG,CAAC,KAAK,CAAC,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;YAC/C,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SAC7B;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAC5B,CAAC;;8FAZY,uBAAuB;0GAAvB,uBAAuB,WAAvB,uBAAuB,mBAFtB,MAAM;6FAEP,uBAAuB;cAHnC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACU;AAGgB;;;;;;;;ICHpF,0EAA8C;IAAA,uDAAS;IAAA,4DAAM;;;IAAf,0DAAS;IAAT,6EAAS;;;IAQ3C,sEAA6D;IAAA,qFAA0B;IAAA,4DAAM;;;IADjG,0EACI;IAAA,qHAA6D;IACjE,4DAAM;;;IADG,0DAAuD;IAAvD,wHAAuD;;;IAQ5D,sEAA4D;IAAA,oFAAyB;IAAA,4DAAM;;;IAD/F,0EACI;IAAA,sHAA4D;IAChE,4DAAM;;;IADG,0DAAsD;IAAtD,uHAAsD;;;IAQ3D,sEAA6D;IAAA,mFAAwB;IAAA,4DAAM;;;IAD/F,0EACI;IAAA,sHAA6D;IACjE,4DAAM;;;IADG,0DAAuD;IAAvD,wHAAuD;;;IAQ5D,sEAA6D;IAAA,kFAAuB;IAAA,4DAAM;;;IAD9F,0EACI;IAAA,sHAA6D;IACjE,4DAAM;;;IADG,0DAAuD;IAAvD,wHAAuD;;;IAK5D,sEAA2E;;;ADxBhF,MAAM,kBAAkB;IAa7B,YAAoB,WAAwB,EACnC,SAA2C,EAC1C,KAAqB,EACrB,MAAc,EACd,OAAwB,EACA,MAAa;QAL3B,gBAAW,GAAX,WAAW,CAAa;QACnC,cAAS,GAAT,SAAS,CAAkC;QAC1C,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,YAAO,GAAP,OAAO,CAAiB;QACA,WAAM,GAAN,MAAM,CAAO;QAhB/C,cAAS,GAAC,KAAK,CAAC;QAChB,YAAO,GAAE,KAAK,CAAC;QAIf,SAAI,GAAU,EAAG,CAAC;QAYhB,kCAAkC;QAClC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QAC7B,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;QAC3B,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;QAC7C,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;QAC3C,gBAAgB;IACjB,CAAC;IAEF,QAAQ;QACN,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACrC,WAAW,EAAE,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YACrC,UAAU,EAAE,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YACpC,WAAW,EAAE,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YACrC,WAAW,EAAE,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;SACtC,CAAC,CAAC;IACL,CAAC;IAGD,MAAM,CAAC,IAAI;QACT,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC;QACpB,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,EAAC;YAC1B,OAAO;SACR;QACD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC;QAClB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,EAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,EAC5E,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,EACzC,GAAG,GAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,GAAC,GAAG,EAClD,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,QAAQ,GAAE;YAC9D,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,QAAQ,CAAC,MAAM,EAAE,CAAC;QACtB,CAAC,EAAC,GAAG,GAAE,GAAC,IAAI,CAAC,SAAS,GAAC,KAAK,CAAC,KAAI,CAAC,OAAO,GAAC,KAAK,CAAC,KAAI,CAAC,KAAK,GAAC,GAAG,CAAC,OAAO,IAAE,GAAG,CAAC,EAAC,CAAC,CAAC;IACjF,CAAC;;oFAnDU,kBAAkB,qtBAkBnB,wEAAe;kGAlBd,kBAAkB;QCb/B,8GAA8C;QAC9C,yEACA;QAAA,0EACI;QADsC,8IAAY,oBAAY,IAAC;QAC/D,yEACI;QAAA,2EAAyB;QAAA,yEAAQ;QAAA,uEAAY;QAAA,4DAAS;QAAA,4DAAQ;QAC9D,8EAEA;QADqB,oLAAkB;QADvC,4DAEA;QAAA,8GACI;QAER,4DAAM;QACN,0EACI;QAAA,4EAAwB;QAAA,0EAAQ;QAAA,uEAAW;QAAA,4DAAS;QAAA,4DAAQ;QAC5D,+EAEA;QADoB,oLAAiB;QADrC,4DAEA;QAAA,gHACI;QAER,4DAAM;QACN,0EACI;QAAA,6EAAyB;QAAA,0EAAQ;QAAA,yEAAa;QAAA,4DAAS;QAAA,4DAAQ;QAC/D,gFAEA;QADqB,6LAA0B;QAD/C,4DAEA;QAAA,gHACI;QAER,4DAAM;QACN,0EACI;QAAA,6EAAyB;QAAA,0EAAQ;QAAA,+EAAmB;QAAA,4DAAS;QAAA,4DAAQ;QACrE,gFAEA;QADqB,4LAAyB;QAD9C,4DAEA;QAAA,gHACI;QAER,4DAAM;QACN,0EACI;QAAA,8EACI;QAAA,mHAAoE;QACpE,oEACJ;QAAA,4DAAS;QACT,8EAAyF;QAAA,mEAAM;QAAA,4DAAS;QAC5G,4DAAM;QACV,4DAAO;QACP,4DAAM;;QA3CD,2EAAa;QAED,0DAAwB;QAAxB,qFAAwB;QAGyB,0DAAiF;QAAjF,wMAAiF;QAEtI,0DAA2D;QAA3D,6HAA2D;QAMP,0DAAgF;QAAhF,uMAAgF;QAEpI,0DAA0D;QAA1D,4HAA0D;QAML,0DAAiF;QAAjF,wMAAiF;QAEtI,0DAA2D;QAA3D,6HAA2D;QAMN,0DAAiF;QAAjF,wMAAiF;QAEtI,0DAA2D;QAA3D,6HAA2D;QAKxD,0DAAoB;QAApB,iFAAoB;QAClB,0DAAe;QAAf,6EAAe;;6FDxBpB,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;sBAmBI,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AEhC3B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { RegisterComponent } from './pages/register/register.component';\r\nimport { AddprojectComponent } from './pages/addproject/addproject.component';\r\nimport { MyprojectsComponent } from './pages/myprojects/myprojects.component';\r\nimport { UpdateProjectComponent } from './pages/updateproject/updateproject.component';\r\nimport { ManageprojectComponent } from './pages/manageproject/manageproject.component';\r\nimport { MyrequistsComponent } from './pages/myrequists/myrequists.component';\r\nimport { MotionComponent } from './pages/motion/motion.component';\r\nimport { LeadComponent } from './pages/lead/lead.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  // {path:'',redirectTo:'home',pathMatch:'full'},\r\n  {path:'',redirectTo:'lead',pathMatch:'full'},\r\n  {path:'home',component: HomeComponent},\r\n  {path:'login',component: LoginComponent},\r\n  {path:'register',component: RegisterComponent},\r\n  {path:'addproject',component: AddprojectComponent},\r\n  {path:'myprojects',component: MyprojectsComponent},\r\n  {path:'updateproject',component: UpdateProjectComponent},\r\n  {path:'manageproject',component: ManageprojectComponent},\r\n  {path:'myrequists',component: MyrequistsComponent},\r\n  {path:'motion',component: MotionComponent},\r\n  {path:'lead',component: LeadComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { AuthService } from './services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'SAI';\r\n  get loggedIn():boolean{\r\n    return this.authSvc.loggedIn;\r\n  }\r\n  get Isadmin():boolean{\r\n    return this.authSvc.Admin;\r\n  }\r\n  constructor(public authSvc:AuthService) {\r\n    authSvc.authorize();\r\n    authSvc.IsAdmin();\r\n  }\r\n\r\n  signout(){\r\n    this.authSvc.logout();\r\n    return false;\r\n  }\r\n}\r\n","<style>\r\n  nav{position: relative;}\r\n  .navbar-nav-right{\r\n    position:absolute;right:0px;\r\n  }\r\n</style>\r\n<nav class=\"navbar navbar-expand navbar-dark bg-dark\">\r\n  <a class=\"navbar-brand\">System for Analysis of Ice</a>\r\n  <!-- Links -->\r\n  <ul class=\"navbar-nav\" [hidden]='Isadmin'>\r\n    <!-- <li class=\"nav-item\">\r\n      <a class=\"nav-link\" routerLink='home' routerLinkActive='active'>Home</a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" [class.disabled]='!loggedIn' routerLink='addproject' routerLinkActive='active'>Add Project</a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" [class.disabled]='!loggedIn' routerLink='myprojects' routerLinkActive='active'>My Project</a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" [class.disabled]='!loggedIn' routerLink='myrequists' routerLinkActive='active'>My Requists</a>\r\n    </li> -->\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" routerLink='lead' routerLinkActive='active'>Lead</a>\r\n    </li>\r\n    <!-- <li class=\"nav-item\">\r\n      <a class=\"nav-link\" routerLink='motion' routerLinkActive='active'>Motion</a>\r\n    </li> -->\r\n  </ul>\r\n  <ul class=\"navbar-nav\" [hidden]='!Isadmin'>\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" routerLink='home' routerLinkActive='active'>Home</a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" routerLink='addproject' routerLinkActive='active'>Add Project</a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" routerLink='myprojects' routerLinkActive='active'>My Projects</a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" [class.disabled]='!loggedIn' routerLink='myrequists' routerLinkActive='active'>My Requests</a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" routerLink='manageproject' routerLinkActive='active'>Manage Projects</a>\r\n    </li>\r\n  </ul>\r\n  <!-- <ul class='navbar-nav navbar-nav-right' [hidden]='loggedIn'>\r\n    <li class='nav-item'>\r\n      <a class=\"nav-link\" routerLink='login' routerLinkActive='active'>Sign-In</a>\r\n    </li>\r\n    <li class='nav-item'>\r\n      <a class=\"nav-link\" routerLink='register' routerLinkActive='active'>Sign-Up</a>\r\n    </li>\r\n  </ul>\r\n  <ul class='navbar-nav navbar-nav-right' [hidden]='!loggedIn'>\r\n    <li class='nav-item'>\r\n      <span class='nav-link active'>Hello {{authSvc.CurrentUser|async}}</span>\r\n    </li>\r\n    <li class='nav-item'>\r\n      <a class=\"nav-link\" href=\"#\" (click)='signout()' routerLink='home'>Sign Out</a>\r\n    </li>\r\n  </ul> -->\r\n</nav>\r\n<div class=\"container-fluid\" role=\"main\">\r\n<router-outlet></router-outlet>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { RegisterComponent } from './pages/register/register.component';\r\nimport { AddprojectComponent } from './pages/addproject/addproject.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { TokenInterceptorService } from './services/token-interceptor.service';\r\nimport { MyprojectsComponent } from './pages/myprojects/myprojects.component';\r\nimport { UpdateProjectComponent } from './pages/updateproject/updateproject.component';\r\nimport { ManageprojectComponent } from './pages/manageproject/manageproject.component';\r\nimport { MyrequistsComponent } from './pages/myrequists/myrequists.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MydialogComponent } from './mydialog/mydialog.component';\r\nimport { UpdatePOPComponent } from './update-pop/update-pop.component';\r\nimport { MotionComponent } from './pages/motion/motion.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { LeadComponent } from './pages/lead/lead.component';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatCardModule } from '@angular/material/card';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    AddprojectComponent,\r\n    MyprojectsComponent, //DialogContentExampleDialog\r\n    UpdateProjectComponent,\r\n    ManageprojectComponent,\r\n    MyrequistsComponent,\r\n    MydialogComponent,\r\n    UpdatePOPComponent,\r\n    MotionComponent,\r\n    LeadComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    MatDialogModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatStepperModule,\r\n    MatDividerModule,\r\n    MatListModule,\r\n    MatGridListModule,\r\n    MatCardModule\r\n  ],\r\n  entryComponents: [\r\n    MydialogComponent,\r\n    UpdatePOPComponent\r\n  ],\r\n  providers: [{provide: HTTP_INTERCEPTORS, useClass: TokenInterceptorService, multi:true}],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nexport interface data {\r\n    data : any\r\n}\r\n@Component({\r\n  selector: 'app-mydialog',\r\n  templateUrl: './mydialog.component.html',\r\n  styleUrls: ['./mydialog.component.scss']\r\n})\r\nexport class MydialogComponent implements OnInit {\r\n\r\n  item: any[] = [ ];\r\n  constructor(@Inject(MAT_DIALOG_DATA) public course : data ) {\r\n    //console.log(course.data[0]._id);\r\n    this.item = course.data;\r\n    //this.item = []\r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<table class=\"table table-hover table-sm\">\r\n    <thead>\r\n        <th scope=\"col\">Commit Message</th>\r\n        <th scope=\"col\">Date</th>\r\n        <th scope=\"col\">Commiter</th>\r\n        <th scope=\"col\">Email</th>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor = 'let git of item'>\r\n            <td>{{git.message}}</td>\r\n            <td>{{git.committer.date}}</td>\r\n            <td>{{git.committer.name}}</td>\r\n            <td>{{git.committer.email}}</td>\r\n        </tr>\r\n    </tbody>\r\n</table>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ProjectsService } from 'src/app/services/projects.service';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-addproject',\r\n  templateUrl: './addproject.component.html',\r\n  styleUrls: ['./addproject.component.scss']\r\n})\r\nexport class AddprojectComponent implements OnInit {\r\n\r\n  projectForm: FormGroup;\r\n  loading =false;\r\n  submitted=false;\r\n  returnUrl: string;\r\n  error: string;\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder,private route: ActivatedRoute,private router: Router,private projSev: ProjectsService) {\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.projectForm=this.formBuilder.group({\r\n      projectname: ['',Validators.required],\r\n      projecturl: ['',Validators.required],\r\n      groupmember: ['',Validators.required],\r\n      description: ['',Validators.required]\r\n    });\r\n  }\r\n\r\n  submit(){\r\n    this.submitted=true;\r\n    if (this.projectForm.invalid){\r\n      return;\r\n    }\r\n    this.loading=true;\r\n    this.projSev.addProjects(this.projectForm.controls.projectname.value,\r\n      this.projectForm.controls.projecturl.value,\r\n      \"{\"+this.projectForm.controls.groupmember.value+\"}\",\r\n      this.projectForm.controls.description.value).subscribe(response=>{\r\n        this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\r\n          this.router.navigate(['home']);\r\n      }); \r\n    },err=>{this.submitted=false;this.loading=false;this.error=err.message||err;});\r\n  }\r\n}\r\n","<!--<div *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</div>-->\r\n<div *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</div>\r\n<div class=\"center\">\r\n<form id=\"form1\" [formGroup]=\"projectForm\" (ngSubmit)=\"submit()\">\r\n    <div class=\"form-group\">\r\n        <label for=\"projectname\"><strong>Project Name</strong></label>\r\n        <input type=\"text\" formControlName=\"projectname\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && projectForm.controls.projectname.errors }\" />\r\n        <div *ngIf=\"submitted && projectForm.controls.projectname.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"projectForm.controls.projectname.errors.required\">Project's name is required</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"projecturl\"><strong>Project Url</strong></label>\r\n        <input type=\"url\" formControlName=\"projecturl\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && projectForm.controls.projecturl.errors }\" />\r\n        <div *ngIf=\"submitted && projectForm.controls.projecturl.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"projectForm.controls.projecturl.errors.required\">Project's Url is required</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"groupmember\"><strong>Group Members</strong></label>\r\n        <input type=\"text\" formControlName=\"groupmember\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && projectForm.controls.groupmember.errors }\" />\r\n        <div *ngIf=\"submitted && projectForm.controls.groupmember.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"projectForm.controls.groupmember.errors.required\">Group member is required</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"description\"><strong>Project Description</strong></label>\r\n        <input type=\"text\" formControlName=\"description\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && projectForm.controls.description.errors }\" />\r\n        <div *ngIf=\"submitted && projectForm.controls.discription.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"projectForm.controls.description.errors.required\">description is required</div>\r\n        </div>\r\n    </div>\r\n    <div id=\"but\" class=\"form-group\">\r\n        <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n            Submit\r\n        </button>\r\n        <a routerLink=\"/home\" class=\"btn btn-link\">Cancel</a>\r\n    </div>\r\n</form>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ProjectsService } from 'src/app/services/projects.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  Projects: any[] = [ ];\r\n  Attribute: any[] = [ ];\r\n  selectedproject = -1;\r\n\r\n  constructor(private projSvc:ProjectsService) { \r\n     projSvc.getApprovedProjects().subscribe(result=>{\r\n       this.Projects=result.data.projects;\r\n     })\r\n  }\r\n\r\n  showDetail(index,project){\r\n    console.log(index);\r\n    console.log(project);\r\n    if (this.selectedproject === index){\r\n      this.selectedproject = -1;\r\n    }\r\n    else {\r\n      this.selectedproject = index;\r\n    }\r\n  }\r\n\r\n  try(){\r\n    console.log();\r\n  }\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!---->\r\n<div>\r\n    <div class=\"container-fluid\">\r\n        <table class=\"table table-hover table-sm\">\r\n            <thead>\r\n                <th>Project Name</th>\r\n                <th>Description</th>\r\n                <th>Url</th>\r\n            </thead>\r\n        <tbody>\r\n            <tr *ngFor = 'let item of Projects'>\r\n                <td>{{item.name}}</td>\r\n                <td>{{item.description}}</td>\r\n                <td><a href='{{item.url}}' target='_new'>{{item.url}}</a></td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n    </div>\r\n</div>\r\n<!--\r\n<div>\r\n    <h2>All Project</h2>\r\n    <div class=\"container-fluid\">\r\n        <table class=\"table table-responsive\">\r\n            <thead>\r\n                <th>Project Name</th>\r\n            </thead>\r\n        </table>\r\n        <tbody>\r\n            <ng-template ngFor let- [ngForof]=\"Projects\" let-index=\"index\">\r\n                <tr (click)='showDetail(index,projects)' class=\"clickable\">\r\n                    <td>{{Projects.name}}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td colspan=3 class=\"detail\">\r\n                        <div class=\"container-fluid\">\r\n                            <div class=\"col-md-4\">\r\n                                <h4>Description: {{Projects.description}}</h4>\r\n                                <h4><a href='{{Projects.url}}' target='_new'>See Webpage</a> </h4>\r\n                            </div>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </tbody>\r\n    </div>\r\n</div>\r\n-->","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport FileSaver from 'file-saver';\nimport { FormControl, Validators } from '@angular/forms';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n\n@Component({\n  selector: 'app-lead',\n  templateUrl: './lead.component.html',\n  styleUrls: ['./lead.component.scss']\n})\nexport class LeadComponent implements OnInit {\n\n  fileName = '';\n\n  status = '';\n\n  new_fileName = '';\n\n  model_param = 'RadarSAT';\n\n  uploaded_image_url: string | ArrayBuffer;\n  image_source;\n  new_url;\n\n  downloaded_image_url;\n\n  constructor(private http: HttpClient, private sanitizer: DomSanitizer) { }\n\n  onFileSelected(event) {\n\n    const file:File = event.target.files[0];\n\n    if (file) {\n\n        this.fileName = file.name;\n\n        const formData = new FormData();\n\n        formData.append(\"file\", file);\n        formData.append(\"model_param\", this.model_param);\n\n        const upload$ = this.http.post(\"http://localhost:3000/api/projects/uploadLead\", formData);\n        \n        upload$.subscribe(result=>{\n          this.new_fileName = (result as any).data;\n          this.status = \"uploaded\";\n        });\n\n        let reader = new FileReader();\n        \n        reader.onloadend = () => {\n          this.uploaded_image_url = reader.result;\n          // console.log(typeof this.uploaded_image_url);\n\n          // this.new_url = this.uploaded_image_url.toString().replace('tiff', 'png');\n          // console.log(\n          //   this.new_url\n          // );\n\n          // this.image_source = this.sanitizer.bypassSecurityTrustUrl(\n          //   this.new_url.toString()\n          // );\n        };\n        reader.readAsDataURL(file);\n\n        \n        // this.image_source = this.sanitizer.bypassSecurityTrustUrl(\n        //   this.image_url[0]\n        // );\n\n    }\n  }\n\n  onSave(){\n    if (this.new_fileName!=''){\n      // console.log(\"flag1: \", this.new_fileName);\n\n      const isReady$ = this.http.post(\"http://localhost:3000/api/projects/isReadyLead\",\n        {name:this.new_fileName});\n    \n      isReady$.subscribe(result=>{\n\n        if ((result as any).data == true){\n          this.status=\"ready\";\n          const download$ = this.http.post(\"http://localhost:3000/api/projects/downloadLead\", \n            {name:this.new_fileName},{responseType:\"blob\"});\n          \n          download$.subscribe(result=>{\n              // console.log(result);\n              FileSaver(result, this.new_fileName);\n\n              let reader = new FileReader();\n        \n              reader.onloadend = () => {\n                this.downloaded_image_url = reader.result;\n              };\n              reader.readAsDataURL(result);\n\n            });\n\n        }\n\n        else{\n          this.status=\"not ready\";\n          console.log(\"file not ready yet\");\n        }\n\n      });\n\n      \n    }\n    \n  }\n\n  reloadPage(){\n    this.fileName = '';\n\n    this.status = '';\n  \n    this.new_fileName = '';\n  \n    // model_param = 'RadarSAT';\n  \n    this.uploaded_image_url = null;\n    this.image_source = null;\n    this.new_url = null;\n  \n    this.downloaded_image_url = null;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<input type=\"file\" class=\"file-input\"\n(change)=\"onFileSelected($event)\" #fileUpload hidden>\n\n<mat-vertical-stepper linear #stepper>\n    <mat-step>\n\n        <ng-template matStepLabel>Select Image Modality</ng-template>\n        <mat-form-field>\n            <mat-label>Choose Image Modality</mat-label>\n            <mat-select [(value)]=\"model_param\">\n                <mat-option value=\"WorldView\">WorldView</mat-option>\n                <mat-option value=\"RadarSAT\">RadarSAT</mat-option>\n                <mat-option value=\"GPRI\">GPRI</mat-option>\n            </mat-select>\n        </mat-form-field>\n        <div>\n            <button mat-button matStepperNext>Next</button>\n        </div>\n\n    </mat-step>\n    <mat-step>\n        <ng-template matStepLabel>Upload Image</ng-template>\n        <div class=\"file-upload\">\n            {{fileName || \"No image uploaded yet.\"}}\n            <button mat-mini-fab color=\"primary\" class=\"upload-btn\"\n                (click)=\"fileUpload.click()\">\n                <mat-icon>attach_file</mat-icon>\n            </button>\n        </div>\n        <div>\n            <button mat-button matStepperPrevious>Back</button>\n            <button mat-button matStepperNext>Next</button>\n        </div>\n    </mat-step>\n    <mat-step>\n        <ng-template matStepLabel>Download Prediction</ng-template>\n        <div>\n            Status: {{status}}\n        </div>\n        <button (click)=\"onSave()\">Download Prediction</button>\n        <div>\n            <!-- <button mat-button matStepperPrevious>Back</button> -->\n            <button mat-button (click)=\"stepper.reset();reloadPage();\">Reset</button>\n        </div>\n    </mat-step>\n</mat-vertical-stepper>\n\n\n\n\n<mat-grid-list cols=\"2\" rowHeight=\"1:1\">\n\n    <mat-grid-tile>\n        <mat-card class=\"img-card\">\n            <mat-card-header>\n                <mat-card-title>uploaded image:</mat-card-title>\n            </mat-card-header>\n            <div class=\"div1\">\n                <img src={{uploaded_image_url}}>\n            </div>\n        </mat-card>\n    </mat-grid-tile>\n\n\n    <mat-grid-tile>\n        <mat-card class=\"img-card\">\n            <mat-card-header>\n                <mat-card-title>downloaded image:</mat-card-title>\n            </mat-card-header>\n            <div class=\"div1\">\n                <img src={{downloaded_image_url}}>\n            </div>\n        </mat-card>\n    </mat-grid-tile>\n\n</mat-grid-list>\n\n\n\n\n\n<!-- <mat-list>\n    <mat-list-item>\n        uploaded image:\n    </mat-list-item>\n\n    <mat-divider [vertical]=\"true\"></mat-divider>\n\n    <mat-list-item>\n        <img src={{uploaded_image_url}}>\n    </mat-list-item>\n\n\n</mat-list> -->","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm: FormGroup;\r\n  loading =false;\r\n  submitted=false;\r\n  returnUrl: string;\r\n  error: string;\r\n\r\n  constructor(private formBuilder: FormBuilder,private route: ActivatedRoute,private router: Router,private authSvc:AuthService) {\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm=this.formBuilder.group({\r\n      username: ['',Validators.required],\r\n      password: ['',Validators.required]\r\n    });\r\n    this.returnUrl=this.route.snapshot.queryParams['returnUrl'] || '/';\r\n  }\r\n\r\n  login(){\r\n    this.submitted=true;\r\n    if (this.loginForm.invalid){\r\n      return;\r\n    }\r\n    this.loading=true;\r\n    this.authSvc.login(this.loginForm.controls.username.value,this.loginForm.controls.password.value).subscribe(response=>{\r\n      this.authSvc.IsAdmin();\r\n      this.router.navigate([this.returnUrl]);\r\n    },err=>{this.submitted=false;this.loading=false;this.error=err.message||err;});\r\n  }\r\n}\r\n","<div *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</div>\r\n<div class=\"center\">\r\n    <form id=\"form1\" [formGroup]=\"loginForm\" (ngSubmit)=\"login()\" class=\"text-center border border-light p-5\">\r\n        <p class=\"h4 mb-4\">Sign In</p>\r\n        <div class=\"form-group\">\r\n            <label for=\"username\">Username</label>\r\n            <input type=\"text\" formControlName=\"username\" class=\"form-control mb-4\" placeholder=\"E-mail\" \r\n            [ngClass]=\"{ 'is-invalid': submitted && loginForm.controls.username.errors }\" />\r\n            <div *ngIf=\"submitted && loginForm.controls.username.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"loginForm.controls.username.errors.required\">Username is required</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"password\">Password</label>\r\n            <input type=\"password\" formControlName=\"password\" class=\"form-control mb-4\" placeholder=\"Password\" \r\n            [ngClass]=\"{ 'is-invalid': submitted && loginForm.controls.password.errors }\" />\r\n            <div *ngIf=\"submitted && loginForm.controls.password.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"loginForm.controls.password.errors.required\">Password is required</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <button id=\"button1\" [disabled]=\"loading\" class=\"btn btn-primary\">\r\n                <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                Login\r\n            </button>\r\n            <a routerLink=\"/register\" class=\"btn btn-link\">Don't have account?</a>\r\n        </div>\r\n    </form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ProjectsService } from 'src/app/services/projects.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport {UpdatePOPComponent} from '../../update-pop/update-pop.component'\r\n\r\n@Component({\r\n  selector: 'app-manageproject',\r\n  templateUrl: './manageproject.component.html',\r\n  styleUrls: ['./manageproject.component.scss']\r\n})\r\nexport class ManageprojectComponent implements OnInit {\r\n  Projects: any[] = [ ];\r\n  Pending: any[] = [ ];\r\n  Approved: any[] = [ ];\r\n  selectedproject = -1;\r\n  error: string;\r\n  returnUrl: string;\r\n\r\n  constructor(private projSvc:ProjectsService, private route: ActivatedRoute, private router: Router, public dialog: MatDialog) { \r\n    this.reloadPage();\r\n  }\r\n\r\n  delete(id){\r\n    this.projSvc.deleteProject(id).subscribe(response=>{\r\n      this.reloadPage();\r\n      // TODO:: show response\r\n    },\r\n      err=>{this.error=err.message||err;});\r\n      this.reloadPage();\r\n  }\r\n\r\n  update(item){\r\n    const dialogRef = this.dialog.open(UpdatePOPComponent, {\r\n      width: '800px',\r\n      height: '700px',\r\n      data: {data : item},\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });\r\n    \r\n  }\r\n  approve(id){\r\n    this.projSvc.approveProject(id).subscribe(response=>{\r\n      // TODO:: show response  \r\n      this.reloadPage();\r\n      },\r\n      err=>{this.error=err.message||err;});\r\n      this.reloadPage();\r\n  }\r\n  reject(id){\r\n    this.projSvc.rejectProject(id).subscribe(response=>{\r\n      // TODO:: show response\r\n      this.reloadPage();\r\n      },\r\n      err=>{this.error=err.message||err;});\r\n      this.reloadPage();\r\n  }\r\n\r\n  reloadPage(){\r\n    this.projSvc.getAllProjects().subscribe(result=>{\r\n      this.Pending=result.data.projects;\r\n      this.Approved=result.data.projects;\r\n      this.Pending = this.Pending.filter(\r\n        project=>project.state=='pending');\r\n      this.Approved = this.Approved.filter(\r\n        project=>project.state=='approved');\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.returnUrl=this.route.snapshot.queryParams['returnUrl'] || '/';\r\n  }\r\n\r\n}\r\n","<div>\r\n    <div class=\"container-fluid\">\r\n        <h2><strong>Pending</strong></h2>\r\n        <table class=\"table table-hover table-sm\">\r\n            <thead>\r\n                <th style=\"width:130px\">Project Name</th>\r\n                <th style=\"width:230px\">Description</th>\r\n                <th style=\"width:150px\">Url</th>\r\n                <th style=\"width:150px\">Group Members</th>\r\n                <th style=\"width:110px\">Applicant</th>\r\n                <th style=\"width:150px\">Date Submitted</th>\r\n                <th style=\"width:150px\"></th>\r\n                <th style=\"width:110px\"></th>\r\n                <th style=\"width:110px\"></th>\r\n            </thead>\r\n        <tbody>\r\n            <tr *ngFor = 'let item of Pending'>\r\n                <td>{{item.name}}</td>\r\n                <td>{{item.description}}</td>\r\n                <td><a href='{{item.url}}' target='_new'>{{item.url}}</a></td>\r\n                <td>{{item.groupMembers}}</td>\r\n                <td>{{item.applicant}}</td>\r\n                <td>{{item.dateSubmitted}}</td>\r\n                <td></td>\r\n                <td><button class=\"btn-primary\" (click)='approve(item._id)'>approve</button></td>\r\n                <td><button class=\"btn-danger\" (click)='reject(item._id)'>reject</button></td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n    <h2><strong>Approved</strong></h2>\r\n        <table class=\"table table-hover table-sm\">\r\n            <thead>\r\n                <th style=\"width:130px\">Project name</th>\r\n                <th style=\"width:230px\">Description</th>\r\n                <th style=\"width:150px\">Url</th>\r\n                <th style=\"width:150px\">Group Members</th>\r\n                <th style=\"width:110px\">Applicant</th>\r\n                <th style=\"width:150px\">Date Submitted</th>\r\n                <th style=\"width:150px\">Date Updated</th>\r\n                <th style=\"width:110px\"></th>\r\n                <th style=\"width:110px\"></th>\r\n            </thead>\r\n        <tbody>\r\n            <tr *ngFor = 'let item of Approved'>\r\n                <td>{{item.name}}</td>\r\n                <td>{{item.description}}</td>\r\n                <td><a href='{{item.url}}' target='_new'>{{item.url}}</a></td>\r\n                <td>{{item.groupMembers}}</td>\r\n                <td>{{item.applicant}}</td>\r\n                <td>{{item.dateSubmitted}}</td>\r\n                <td>{{item.dateUpdated}}</td>\r\n                <td><button mat-button class=\"btn-primary\" (click)='update(item)'>update</button></td>\r\n                <td><button class=\"btn-danger\" (click)='delete(item._id)'>delete</button></td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport FileSaver from 'file-saver';\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-motion',\n  templateUrl: './motion.component.html',\n  styleUrls: ['./motion.component.scss']\n})\nexport class MotionComponent implements OnInit {\n\n  fileName = '';\n\n  status = '';\n\n  new_fileName = '';\n\n  model_param = 'RadarSAT';\n\n  constructor(private http: HttpClient) { }\n\n  onFileSelected(event) {\n\n    const file:File = event.target.files[0];\n\n    if (file) {\n\n        this.fileName = file.name;\n\n        const formData = new FormData();\n\n        formData.append(\"file\", file);\n        formData.append(\"model_param\", this.model_param);\n\n        const upload$ = this.http.post(\"http://localhost:3000/api/projects/uploadMotion\", formData);\n        \n        upload$.subscribe(result=>{\n          this.new_fileName = (result as any).data;\n          this.status = \"uploaded\";\n        });\n    }\n  }\n\n  onSave(){\n    if (this.new_fileName!=''){\n      // console.log(\"flag1: \", this.new_fileName);\n\n      const isReady$ = this.http.post(\"http://localhost:3000/api/projects/isReadyMotion\",\n        {name:this.new_fileName});\n    \n      isReady$.subscribe(result=>{\n\n        if ((result as any).data == true){\n          this.status=\"ready\";\n          const download$ = this.http.post(\"http://localhost:3000/api/projects/downloadMotion\", \n            {name:this.new_fileName},{responseType:\"blob\"});\n          \n          download$.subscribe(result=>{\n              // console.log(result);\n              FileSaver(result, this.new_fileName);\n            });\n\n        }\n\n        else{\n          this.status=\"not ready\";\n          console.log(\"file not ready yet\");\n        }\n\n      });\n\n      \n    }\n    \n  }\n\n  // onSave(){\n  //   if (this.new_fileName!=''){\n  //     console.log(\"flag1: \", this.new_fileName);\n\n  //     const download$ = this.http.post(\"http://localhost:3000/api/projects/downloadMotion\", \n  //       {name:this.new_fileName},{responseType:\"blob\"});\n\n      \n  //     download$.subscribe(result=>{\n  //         console.log(result);\n  //         // let downloadURL = window.URL.createObjectURL(data);\n  //         FileSaver(result, this.new_fileName);\n  //       });\n  //   }\n    \n  // }\n\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<input type=\"file\" class=\"file-input\"\n(change)=\"onFileSelected($event)\" #fileUpload hidden>\n\n<!-- <div>\n\n    <div>\n        <mat-form-field>\n            <mat-label>Choose model parameter</mat-label>\n            <mat-select [(value)]=\"model_param\">\n                <mat-option value=\"U-Net\">U-Net</mat-option>\n                <mat-option value=\"WorldView\">WorldView</mat-option>\n                <mat-option value=\"RadarSAT\">RadarSAT</mat-option>\n                <mat-option value=\"GPRI\">GPRI</mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n\n    <div class=\"file-upload\">\n        {{fileName || \"No file uploaded yet.\"}}\n        <button mat-mini-fab color=\"primary\" class=\"upload-btn\"\n            (click)=\"fileUpload.click()\">\n            <mat-icon>attach_file</mat-icon>\n        </button>\n    </div>\n    <div>\n        <div>\n            Filename: {{fileName}}\n        </div>\n        <div>\n            model_param: {{model_param}}\n        </div>\n        <div>\n            Status: {{status}}\n        </div>\n        <div>\n            New_fileName: {{new_fileName}}\n        </div>\n    </div>\n</div>\n\n<div>\n    <button (click)=\"onSave()\">Download Prediction</button>\n</div> -->\n\n\n<mat-vertical-stepper linear #stepper>\n    <mat-step>\n\n        <ng-template matStepLabel>Select Image Modality</ng-template>\n        <mat-form-field>\n            <mat-label>Choose Image Modality</mat-label>\n            <mat-select [(value)]=\"model_param\">\n                <mat-option value=\"WorldView\">WorldView</mat-option>\n                <mat-option value=\"RadarSAT\">RadarSAT</mat-option>\n                <mat-option value=\"GPRI\">GPRI</mat-option>\n            </mat-select>\n        </mat-form-field>\n        <div>\n            <button mat-button matStepperNext>Next</button>\n        </div>\n\n    </mat-step>\n    <mat-step>\n        <ng-template matStepLabel>Upload Image</ng-template>\n        <div class=\"file-upload\">\n            {{fileName || \"No image uploaded yet.\"}}\n            <button mat-mini-fab color=\"primary\" class=\"upload-btn\"\n                (click)=\"fileUpload.click()\">\n                <mat-icon>attach_file</mat-icon>\n            </button>\n        </div>\n        <div>\n            <button mat-button matStepperPrevious>Back</button>\n            <button mat-button matStepperNext>Next</button>\n        </div>\n    </mat-step>\n    <mat-step>\n        <ng-template matStepLabel>Download Prediction</ng-template>\n        <div>\n            Status: {{status}}\n        </div>\n        <button (click)=\"onSave()\">Download Prediction</button>\n        <div>\n            <!-- <button mat-button matStepperPrevious>Back</button> -->\n            <button mat-button (click)=\"stepper.reset()\">Reset</button>\n        </div>\n    </mat-step>\n</mat-vertical-stepper>","import { Component, OnInit, inject, Inject } from '@angular/core';\r\nimport { ProjectsService } from 'src/app/services/projects.service';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport {MydialogComponent} from '../../mydialog/mydialog.component'\r\n\r\n\r\n@Component({\r\n  selector: 'app-myprojects',\r\n  templateUrl: './myprojects.component.html',\r\n  styleUrls: ['./myprojects.component.scss']\r\n})\r\nexport class MyprojectsComponent implements OnInit {\r\n\r\n  Projects: any[] = [ ];\r\n  Attribute: any[] = [ ];\r\n  selectedproject = -1;\r\n  error: string;\r\n  github: any[]=[ ];\r\n\r\n  constructor(private projSvc:ProjectsService, public dialog: MatDialog) { \r\n    projSvc.getProjectsByCurUser().subscribe(result=>{\r\n       this.Projects=result.data;\r\n    })\r\n  }\r\n\r\n  showDetail(index, project){\r\n    console.log(index);\r\n    console.log(project);\r\n    if (this.selectedproject === index){\r\n      this.selectedproject = -1;\r\n    }\r\n    else {\r\n      this.selectedproject = index;\r\n    }\r\n  }\r\n  Committed(item){\r\n    this.projSvc.checkProjectCommits(item.url).subscribe(a=>{\r\n      this.github = a.data;\r\n      const dialogRef = this.dialog.open(MydialogComponent, {\r\n        width: '800px',\r\n        height: '700px',\r\n        data: {data : this.github},\r\n      });\r\n    })\r\n  }\r\n  \r\n  ngOnInit(): void {\r\n  }\r\n\r\n}","\r\n<div>\r\n    <div class=\"container-fluid\">\r\n        <table class=\"table table-hover table-sm\">\r\n            <thead>\r\n                <th>Project Name</th>\r\n                <th>Description</th>\r\n                <th>Group Members</th>\r\n                <th>Url</th>\r\n                <th></th>\r\n                <!--<th>Update</th>-->\r\n                <!--<th>Delate</th>-->\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor = 'let item of Projects'>\r\n                    <td>{{item.name}}</td>\r\n                    <td>{{item.description}}</td>\r\n                    <td>{{item.groupMembers}}</td>\r\n                    <td><a href='{{item.url}}' target='_new'>{{item.url}}</a></td>\r\n                    <th><button mat-button style=\"border-radius: 12px; text-align: center; background-color: #2AF1E5; color: white;\" (click)='Committed(item)'>Check Commit</button></th>\r\n                    <!--<td><button class=\"btn-primary\" (click)='update(item._id,item.name,item.url,item.groupMembers,item.description)' routerLink=\"/updateproject\">update</button></td>\r\n                    <td><button class=\"btn-danger\" (click)='delate(item._id)'>delete</button></td>-->\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ProjectsService } from 'src/app/services/projects.service';\r\n\r\n@Component({\r\n  selector: 'app-myrequists',\r\n  templateUrl: './myrequists.component.html',\r\n  styleUrls: ['./myrequists.component.scss']\r\n})\r\nexport class MyrequistsComponent implements OnInit {\r\n  Projects: any[] = [ ];\r\n  Attribute: any[] = [ ];\r\n  selectedproject = -1;\r\n  error: string;\r\n\r\n  constructor(private projSvc:ProjectsService) { \r\n    projSvc.getSubmittedProjects().subscribe(result=>{\r\n      this.Projects=result.data.projects;\r\n    })\r\n  }\r\n\r\n  showDetail(index, project){\r\n    console.log(index);\r\n    console.log(project);\r\n    if (this.selectedproject === index){\r\n      this.selectedproject = -1;\r\n    }\r\n    else {\r\n      this.selectedproject = index;\r\n    }\r\n  }\r\n\r\n  delate(id){\r\n    //let index = this.Projects.indexOf(item);\r\n    this.projSvc.deleteProject(id).subscribe(err=>{this.error=err.message||err;\r\n      this.projSvc.getSubmittedProjects().subscribe(result=>{\r\n        this.Projects=result.data;\r\n      })}\r\n      );\r\n  }\r\n  update(id, name, url, groupmember, description){\r\n    this.projSvc.SetIndex(id);\r\n    this.projSvc.SendInfo(name, url, groupmember, description);\r\n  }\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div>\r\n    <div class=\"container-fluid\">\r\n        <table class=\"table table-hover table-sm\">\r\n            <thead>\r\n                <th>Project Name</th>\r\n                <th>Description</th>\r\n                <th>Group Members</th>\r\n                <th>Url</th>\r\n                <th>State</th>\r\n                <th>Approved/Rejected By</th>\r\n                <!--<th>Update</th>-->\r\n                <!--<th>Delate</th>-->\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor = 'let item of Projects'>\r\n                    <td>{{item.name}}</td>\r\n                    <td>{{item.description}}</td>\r\n                    <td>{{item.groupMembers}}</td>\r\n                    <td><a href='{{item.url}}' target='_new'>{{item.url}}</a></td>\r\n                    <td>{{item.state}}</td>\r\n                    <td>{{item.approvedBy}}</td>\r\n                    <!--<td><button class=\"btn-primary\" (click)='update(item._id,item.name,item.url,item.groupMembers,item.description)' routerLink=\"/updateproject\">update</button></td>\r\n                    <td><button class=\"btn-danger\" (click)='delate(item._id)'>delete</button></td>-->\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  registerForm: FormGroup;\r\n  loading =false;\r\n  submitted=false;\r\n  returnUrl: string;\r\n  error: string;\r\n\r\n  constructor(private formBuilder: FormBuilder,private route: ActivatedRoute,private router: Router,private authSvc:AuthService) {\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.registerForm=this.formBuilder.group({\r\n      username: ['',Validators.required],\r\n      password: ['',Validators.required]\r\n    });\r\n    this.returnUrl=this.route.snapshot.queryParams['returnUrl'] || '/';\r\n  }\r\n\r\n  regist(){\r\n    this.submitted=true;\r\n    if (this.registerForm.invalid){\r\n      return;\r\n    }\r\n    this.loading=true;\r\n    this.authSvc.regist(this.registerForm.controls.username.value,this.registerForm.controls.password.value).subscribe(response=>{\r\n      this.router.navigate([this.returnUrl]);\r\n    },err=>{this.submitted=false;this.loading=false;this.error=err.message||err;});\r\n  }\r\n}\r\n","<div *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</div>\r\n<div class=\"center\">\r\n    <form id=\"form1\" [formGroup]=\"registerForm\" (ngSubmit)=\"regist()\" class=\"text-center border border-light p-5\">\r\n        <p class=\"h4 mb-4\">Sign Up</p>\r\n        <div class=\"form-group\">\r\n            <label for=\"username\">Username</label>\r\n            <input type=\"text\" formControlName=\"username\" class=\"form-control\" \r\n            [ngClass]=\"{ 'is-invalid': submitted && registerForm.controls.username.errors }\" placeholder=\"E-mail\"/>\r\n            <div *ngIf=\"submitted && registerForm.controls.username.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"registerForm.controls.username.errors.required\">Username is required</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"password\">Password</label>\r\n            <input type=\"password\" formControlName=\"password\" class=\"form-control\" placeholder=\"Password\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && registerForm.controls.password.errors }\" />\r\n            <div *ngIf=\"submitted && registerForm.controls.password.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"registerForm.controls.password.errors.required\">Password is required</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n                <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                register\r\n            </button>\r\n            <a routerLink=\"/login\" class=\"btn btn-link\">Already has account</a>\r\n        </div>\r\n    </form>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ProjectsService } from 'src/app/services/projects.service';\r\n\r\n@Component({\r\n  selector: 'app-updateproject',\r\n  templateUrl: './updateproject.component.html',\r\n  styleUrls: ['./updateproject.component.scss']\r\n})\r\nexport class UpdateProjectComponent implements OnInit {\r\n  Infor: any[] = [ ];\r\n  updateForm: FormGroup;\r\n  loading =false;\r\n  submitted=false;\r\n  returnUrl: string;\r\n  error: string;\r\n  index: string;\r\n  url: string;\r\n  name: string;\r\n  groupMember: string;\r\n  descript: string;\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder,private route: ActivatedRoute,private router: Router,private projSev: ProjectsService) {\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.updateForm=this.formBuilder.group({\r\n      projectname: ['',Validators.required],\r\n      projecturl: ['',Validators.required],\r\n      groupmember: ['',Validators.required],\r\n      description: ['',Validators.required]\r\n    });\r\n    this.index=this.projSev.GetIndex();\r\n    this.name=this.projSev.GetName();\r\n    this.url=this.projSev.GetUrl();\r\n    this.groupMember=this.projSev.GetGroupM();\r\n    this.descript=this.projSev.GetDescript();\r\n    this.Infor = [{\r\n      \"name\": this.name,\r\n      \"description\": this.descript,\r\n      \"url\": this.url,\r\n      \"groupMembers\": this.groupMember\r\n  } ];\r\n    this.returnUrl=this.route.snapshot.queryParams['returnUrl'] || '/';\r\n  }\r\n\r\n  submit(){\r\n    this.submitted=true;\r\n    if (this.updateForm.invalid){\r\n      return;\r\n    }\r\n    this.loading=true;\r\n    this.projSev.UpdateProject(this.index,this.updateForm.controls.projectname.value,\r\n      this.updateForm.controls.projecturl.value,\r\n      \"{\"+this.updateForm.controls.groupmember.value+\"}\",\r\n      this.updateForm.controls.description.value).subscribe(response=>{\r\n      this.router.navigate([this.returnUrl]);\r\n    },err=>{this.submitted=false;this.loading=false;this.error=err.message||err;});\r\n  }\r\n}\r\n","<!--<div *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</div>-->\r\n<div *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</div>\r\n<div class=\"center\">\r\n<h2>Update Project</h2>\r\n<form id=\"form1\" [formGroup]=\"updateForm\" (ngSubmit)=\"submit()\">\r\n    <div class=\"form-group\">\r\n        <label for=\"projectname\">Project's Name</label>\r\n        <input formControlName=\"projectname\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && updateForm.controls.projectname.errors }\" \r\n        #textbox type=\"text\" [(ngModel)]=\"name\"/>\r\n        <div *ngIf=\"submitted && updateForm.controls.projectname.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"updateForm.controls.projectname.errors.required\">Project's name is required</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"projecturl\">Project's Url</label>\r\n        <input formControlName=\"projecturl\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && updateForm.controls.projecturl.errors }\" \r\n        #textbox type=\"url\" [(ngModel)]=\"url\"/>\r\n        <div *ngIf=\"submitted && updateForm.controls.projecturl.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"updateForm.controls.projecturl.errors.required\">Project's Url is required</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"groupmember\">Group Member</label>\r\n        <input formControlName=\"groupmember\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && updateForm.controls.groupmember.errors }\" \r\n        #textbox type=\"text\" [(ngModel)]=\"groupMember\"/>\r\n        <div *ngIf=\"submitted && updateForm.controls.groupmember.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"updateForm.controls.groupmember.errors.required\">Group member is required</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"description\">Description</label>\r\n        <input formControlName=\"description\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && updateForm.controls.description.errors }\" \r\n        #textbox type=\"text\" [(ngModel)]=\"descript\"/>\r\n        <div *ngIf=\"submitted && updateForm.controls.description.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"updateForm.controls.description.errors.required\">description is required</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n            Submit\r\n        </button>\r\n    </div>\r\n</form>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, ReplaySubject, throwError } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private path='http://localhost:3000/api/security/'\r\n  private _token:string=null;\r\n  private isAD: boolean=false;\r\n  CurrentUser: ReplaySubject<string>=new ReplaySubject<string>();\r\n\r\n  get token():string{\r\n    if (this._token==null){\r\n      this._token=localStorage.getItem('token')\r\n    }\r\n    return this._token;\r\n  }\r\n  \r\n  set token(val:string){\r\n    this._token=val;\r\n    if (val==null)\r\n      localStorage.removeItem('token');\r\n    else\r\n      localStorage.setItem('token',val);\r\n  }\r\n  get loggedIn():boolean{\r\n    return this.token!=null;\r\n  }\r\n  get Admin():boolean{\r\n    return this.isAD;\r\n  }\r\n  constructor(private http:HttpClient) { \r\n    this.CurrentUser.next(null);\r\n  }\r\n\r\n  //authorize calls the underlying api to see if the current token is valid (if it exists) and clears it if it is not.\r\n  //returns nothing, but updates token if it is invalid\r\n  authorize():void{\r\n    this.http.get(this.path+'authorize').subscribe(result=>{\r\n      //on success, we do nothing because token is good\r\n      if (result['status']!='success'){\r\n        this.token=null;\r\n      }\r\n      else{\r\n        this.CurrentUser.next(result['data'].email)\r\n      }\r\n    },err=>{\r\n      this.token=null;\r\n    });\r\n  }\r\n  IsAdmin(): void{\r\n    this.http.get(this.path+'isAdmin').subscribe(result=>{\r\n      if (result['data']==='True'){\r\n        this.isAD=true;\r\n      }\r\n      else{\r\n        this.isAD=false;\r\n      }\r\n    },err=>{\r\n      this.isAD=false;\r\n    }\r\n    )\r\n  }\r\n\r\n  login(email: string,password:string): Observable<any>{\r\n    return this.http.post<any>(this.path+'login',{email: email,password: password })\r\n      .pipe(map(user=>{\r\n        this.token=user.data.token\r\n        this.CurrentUser.next(user.data.user.email);\r\n        return user.data.user;\r\n      }),catchError(err=>{this.CurrentUser.next(null);this.token=null;return throwError(err.message||'server error')}));\r\n  }\r\n\r\n  regist(email: string,password:string): Observable<any>{\r\n    return this.http.post<any>(this.path+'register',{email: email,password: password })\r\n    .pipe(catchError(err=>{return throwError(err.message||'server error')}));\r\n  }\r\n\r\n  logout(){\r\n    this.token=null;\r\n    this.isAD=false;\r\n    this.CurrentUser.next(null);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectsService {\r\n\r\n  private path=\"http://localhost:3000/api/projects/\"\r\n  constructor(private http:HttpClient) { }\r\n  index: string;\r\n  Name: string;\r\n  URL: string;\r\n  GroupM: string;\r\n  Descript: string;\r\n\r\n  github: any[]=[ ];\r\n\r\n  getApprovedProjects(): Observable<any>{\r\n    return this.http.get(this.path+'getApprovedProjects');\r\n  }\r\n  getSubmittedProjects(): Observable<any>{\r\n    return this.http.get(this.path+'getSubmittedProjects');\r\n  }\r\n  getProjectsByCurUser(): Observable<any>{\r\n    return this.http.get(this.path+'getProjectsByCurUser');\r\n  }\r\n  getAllProjects(): Observable<any>{\r\n    return this.http.get(this.path+'getAllProjects');\r\n  }\r\n  addProjects(name: string, url: string, groupmember: string, description: string): Observable<any>{\r\n    return this.http.post(this.path,{name: name, url: url, groupMembers: groupmember, description: description});\r\n  }\r\n  approveProject(id): Observable<any>{\r\n    return this.http.post(this.path+\"approveProject\",{id: id});\r\n  }\r\n  rejectProject(id): Observable<any>{\r\n    return this.http.post(this.path+\"rejectProject\",{id: id});\r\n  }\r\n  UpdateProject(id, name: string, url: string, groupmember: string, description: string): Observable<any>{\r\n    return this.http.put(this.path+'',{id: id, name: name, url: url, groupMembers: groupmember, description: description});\r\n  }\r\n  checkProjectCommits(url: string): Observable<any>{\r\n    return this.http.post(this.path+'checkProjectCommits',{url: url});\r\n  }\r\n\r\n  deleteProject(id): Observable<any>{\r\n    return this.http.post(this.path+'deleteProject',{id: id});\r\n  }\r\n  SetIndex(id) {\r\n    this.index = id;\r\n  }\r\n  GetIndex() {\r\n    return this.index;\r\n  }\r\n  SendInfo(name, url, groupmember, description) {\r\n    this.Name=name;\r\n    this.URL=url;\r\n    this.GroupM=groupmember;\r\n    this.Descript=description;\r\n  }\r\n  GetName() {\r\n    return this.Name;\r\n  }\r\n  GetUrl() {\r\n    return this.URL;\r\n  }\r\n  GetGroupM() {\r\n    return this.GroupM;\r\n  }\r\n  GetDescript() {\r\n    return this.Descript;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenInterceptorService implements HttpInterceptor {\r\n\r\n  constructor(private authSvc:AuthService) { }\r\n  intercept(req: HttpRequest<any>, next: HttpHandler):   Observable<HttpEvent<any>> {\r\n    // All HTTP requests are going to go through this method\r\n    let newHeaders=req.headers;\r\n    if (this.authSvc.token){\r\n      newHeaders=newHeaders.append('Authorization',this.authSvc.token);\r\n      const authReq=req.clone({headers: newHeaders});\r\n      return next.handle(authReq);\r\n    }\r\n    return next.handle(req);\r\n}\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ProjectsService } from 'src/app/services/projects.service';\r\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material/dialog';\r\nexport interface data {\r\n  data : any\r\n}\r\n\r\n@Component({\r\n  selector: 'app-update-pop',\r\n  templateUrl: './update-pop.component.html',\r\n  styleUrls: ['./update-pop.component.scss']\r\n})\r\nexport class UpdatePOPComponent implements OnInit {\r\n\r\n  submitted=false;\r\n  loading =false;\r\n  error: string;\r\n  index: string;\r\n  updateForm: FormGroup;\r\n  item: any[] = [ ];\r\n  url: string;\r\n  name: string;\r\n  groupMembers: string;\r\n  description: string;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n    public dialogRef: MatDialogRef<UpdatePOPComponent>,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private projSev: ProjectsService, \r\n    @Inject(MAT_DIALOG_DATA) public course : data ) {\r\n    //console.log(course.data[0]._id);\r\n    this.item = course.data;\r\n    this.name = course.data.name;\r\n    this.url = course.data.url;\r\n    this.groupMembers = course.data.groupMembers;\r\n    this.description = course.data.description;\r\n    //this.item = []\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.updateForm=this.formBuilder.group({\r\n      projectname: ['',Validators.required],\r\n      projecturl: ['',Validators.required],\r\n      groupmember: ['',Validators.required],\r\n      description: ['',Validators.required]\r\n    });\r\n  }\r\n\r\n  \r\n  submit(item){\r\n    this.submitted=true;\r\n    if (this.updateForm.invalid){\r\n      return;\r\n    }\r\n    this.loading=true;\r\n    this.projSev.UpdateProject(item._id,this.updateForm.controls.projectname.value,\r\n      this.updateForm.controls.projecturl.value,\r\n      \"{\"+this.updateForm.controls.groupmember.value+\"}\",\r\n      this.updateForm.controls.description.value).subscribe(response=>{\r\n        this.dialogRef.close();\r\n        location.reload();\r\n    },err=>{this.submitted=false;this.loading=false;this.error=err.message||err;});\r\n  }\r\n\r\n}\r\n","<!--<div *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</div>-->\r\n<div *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</div>\r\n<div class=\"center\">\r\n<form id=\"form1\" [formGroup]=\"updateForm\" (ngSubmit)=\"submit(item)\">\r\n    <div class=\"form-group\">\r\n        <label for=\"projectname\"><strong>Project Name</strong></label>\r\n        <input formControlName=\"projectname\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && updateForm.controls.projectname.errors }\" \r\n        #textbox type=\"text\" [(ngModel)]=\"name\"/>\r\n        <div *ngIf=\"submitted && updateForm.controls.projectname.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"updateForm.controls.projectname.errors.required\">Project's name is required</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"projecturl\"><strong>Project Url</strong></label>\r\n        <input formControlName=\"projecturl\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && updateForm.controls.projecturl.errors }\" \r\n        #textbox type=\"url\" [(ngModel)]=\"url\"/>\r\n        <div *ngIf=\"submitted && updateForm.controls.projecturl.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"updateForm.controls.projecturl.errors.required\">Project's Url is required</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"groupmember\"><strong>Group Members</strong></label>\r\n        <input formControlName=\"groupmember\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && updateForm.controls.groupmember.errors }\" \r\n        #textbox type=\"text\" [(ngModel)]=\"groupMembers\"/>\r\n        <div *ngIf=\"submitted && updateForm.controls.groupmember.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"updateForm.controls.groupmember.errors.required\">Group member is required</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"description\"><strong>Project Description</strong></label>\r\n        <input formControlName=\"description\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && updateForm.controls.description.errors }\" \r\n        #textbox type=\"text\" [(ngModel)]=\"description\"/>\r\n        <div *ngIf=\"submitted && updateForm.controls.description.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"updateForm.controls.description.errors.required\">description is required</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n            Submit\r\n        </button>\r\n        <button style=\"text-align: center;\" mat-button mat-dialog-close class=\"btn btn-primary\"> Cancel</button>\r\n    </div>\r\n</form>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}