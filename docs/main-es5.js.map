{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/mydialog/mydialog.component.ts","webpack:///src/app/mydialog/mydialog.component.html","webpack:///src/app/pages/addproject/addproject.component.ts","webpack:///src/app/pages/addproject/addproject.component.html","webpack:///src/app/pages/home/home.component.ts","webpack:///src/app/pages/home/home.component.html","webpack:///src/app/pages/lead/lead.component.ts","webpack:///src/app/pages/lead/lead.component.html","webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/login/login.component.html","webpack:///src/app/pages/manageproject/manageproject.component.ts","webpack:///src/app/pages/manageproject/manageproject.component.html","webpack:///src/app/pages/motion/motion.component.ts","webpack:///src/app/pages/motion/motion.component.html","webpack:///src/app/pages/myprojects/myprojects.component.ts","webpack:///src/app/pages/myprojects/myprojects.component.html","webpack:///src/app/pages/myrequists/myrequists.component.ts","webpack:///src/app/pages/myrequists/myrequists.component.html","webpack:///src/app/pages/register/register.component.ts","webpack:///src/app/pages/register/register.component.html","webpack:///src/app/pages/updateproject/updateproject.component.ts","webpack:///src/app/pages/updateproject/updateproject.component.html","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/projects.service.ts","webpack:///src/app/services/token-interceptor.service.ts","webpack:///src/app/update-pop/update-pop.component.ts","webpack:///src/app/update-pop/update-pop.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","authSvc","title","authorize","IsAdmin","logout","loggedIn","Admin","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","entryComponents","providers","bootstrap","MydialogComponent","course","item","data","AddprojectComponent","formBuilder","route","router","projSev","loading","submitted","projectForm","group","projectname","required","projecturl","groupmember","description","invalid","addProjects","controls","value","subscribe","response","navigateByUrl","skipLocationChange","navigate","err","error","message","submit","HomeComponent","projSvc","Projects","Attribute","selectedproject","getApprovedProjects","result","projects","index","project","console","log","LeadComponent","http","sanitizer","fileName","status","new_fileName","model_param","event","file","target","files","name","formData","FormData","append","upload$","post","reader","FileReader","onloadend","uploaded_image_url","readAsDataURL","isReady$","download$","responseType","downloaded_image_url","image_source","new_url","onFileSelected","onSave","reloadPage","LoginComponent","loginForm","username","password","returnUrl","snapshot","queryParams","login","ManageprojectComponent","dialog","Pending","Approved","deleteProject","dialogRef","open","width","height","afterClosed","approveProject","rejectProject","getAllProjects","filter","state","MotionComponent","MyprojectsComponent","github","getProjectsByCurUser","checkProjectCommits","url","a","MyrequistsComponent","getSubmittedProjects","SetIndex","SendInfo","RegisterComponent","registerForm","regist","UpdateProjectComponent","Infor","updateForm","GetIndex","GetName","GetUrl","groupMember","GetGroupM","descript","GetDescript","UpdateProject","AuthService","_token","isAD","CurrentUser","next","get","token","email","pipe","user","localStorage","getItem","val","removeItem","setItem","providedIn","ProjectsService","groupMembers","put","Name","URL","GroupM","Descript","TokenInterceptorService","newHeaders","headers","authReq","clone","handle","UpdatePOPComponent","_id","close","location","reload","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { RegisterComponent } from './pages/register/register.component';\r\nimport { AddprojectComponent } from './pages/addproject/addproject.component';\r\nimport { MyprojectsComponent } from './pages/myprojects/myprojects.component';\r\nimport { UpdateProjectComponent } from './pages/updateproject/updateproject.component';\r\nimport { ManageprojectComponent } from './pages/manageproject/manageproject.component';\r\nimport { MyrequistsComponent } from './pages/myrequists/myrequists.component';\r\nimport { MotionComponent } from './pages/motion/motion.component';\r\nimport { LeadComponent } from './pages/lead/lead.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  // {path:'',redirectTo:'home',pathMatch:'full'},\r\n  {path:'',redirectTo:'lead',pathMatch:'full'},\r\n  {path:'home',component: HomeComponent},\r\n  {path:'login',component: LoginComponent},\r\n  {path:'register',component: RegisterComponent},\r\n  {path:'addproject',component: AddprojectComponent},\r\n  {path:'myprojects',component: MyprojectsComponent},\r\n  {path:'updateproject',component: UpdateProjectComponent},\r\n  {path:'manageproject',component: ManageprojectComponent},\r\n  {path:'myrequists',component: MyrequistsComponent},\r\n  {path:'motion',component: MotionComponent},\r\n  {path:'lead',component: LeadComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { AuthService } from './services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'SAI';\r\n  get loggedIn():boolean{\r\n    return this.authSvc.loggedIn;\r\n  }\r\n  get Isadmin():boolean{\r\n    return this.authSvc.Admin;\r\n  }\r\n  constructor(public authSvc:AuthService) {\r\n    authSvc.authorize();\r\n    authSvc.IsAdmin();\r\n  }\r\n\r\n  signout(){\r\n    this.authSvc.logout();\r\n    return false;\r\n  }\r\n}\r\n","<style>\r\n  nav{position: relative;}\r\n  .navbar-nav-right{\r\n    position:absolute;right:0px;\r\n  }\r\n</style>\r\n<nav class=\"navbar navbar-expand navbar-dark bg-dark\">\r\n  <a class=\"navbar-brand\">System for Analysis of Ice</a>\r\n  <!-- Links -->\r\n  <ul class=\"navbar-nav\" [hidden]='Isadmin'>\r\n    <!-- <li class=\"nav-item\">\r\n      <a class=\"nav-link\" routerLink='home' routerLinkActive='active'>Home</a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" [class.disabled]='!loggedIn' routerLink='addproject' routerLinkActive='active'>Add Project</a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" [class.disabled]='!loggedIn' routerLink='myprojects' routerLinkActive='active'>My Project</a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" [class.disabled]='!loggedIn' routerLink='myrequists' routerLinkActive='active'>My Requists</a>\r\n    </li> -->\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" routerLink='lead' routerLinkActive='active'>Lead</a>\r\n    </li>\r\n    <!-- <li class=\"nav-item\">\r\n      <a class=\"nav-link\" routerLink='motion' routerLinkActive='active'>Motion</a>\r\n    </li> -->\r\n  </ul>\r\n  <ul class=\"navbar-nav\" [hidden]='!Isadmin'>\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" routerLink='home' routerLinkActive='active'>Home</a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" routerLink='addproject' routerLinkActive='active'>Add Project</a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" routerLink='myprojects' routerLinkActive='active'>My Projects</a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" [class.disabled]='!loggedIn' routerLink='myrequists' routerLinkActive='active'>My Requests</a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" routerLink='manageproject' routerLinkActive='active'>Manage Projects</a>\r\n    </li>\r\n  </ul>\r\n  <!-- <ul class='navbar-nav navbar-nav-right' [hidden]='loggedIn'>\r\n    <li class='nav-item'>\r\n      <a class=\"nav-link\" routerLink='login' routerLinkActive='active'>Sign-In</a>\r\n    </li>\r\n    <li class='nav-item'>\r\n      <a class=\"nav-link\" routerLink='register' routerLinkActive='active'>Sign-Up</a>\r\n    </li>\r\n  </ul>\r\n  <ul class='navbar-nav navbar-nav-right' [hidden]='!loggedIn'>\r\n    <li class='nav-item'>\r\n      <span class='nav-link active'>Hello {{authSvc.CurrentUser|async}}</span>\r\n    </li>\r\n    <li class='nav-item'>\r\n      <a class=\"nav-link\" href=\"#\" (click)='signout()' routerLink='home'>Sign Out</a>\r\n    </li>\r\n  </ul> -->\r\n</nav>\r\n<div class=\"container-fluid\" role=\"main\">\r\n<router-outlet></router-outlet>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { RegisterComponent } from './pages/register/register.component';\r\nimport { AddprojectComponent } from './pages/addproject/addproject.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { TokenInterceptorService } from './services/token-interceptor.service';\r\nimport { MyprojectsComponent } from './pages/myprojects/myprojects.component';\r\nimport { UpdateProjectComponent } from './pages/updateproject/updateproject.component';\r\nimport { ManageprojectComponent } from './pages/manageproject/manageproject.component';\r\nimport { MyrequistsComponent } from './pages/myrequists/myrequists.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MydialogComponent } from './mydialog/mydialog.component';\r\nimport { UpdatePOPComponent } from './update-pop/update-pop.component';\r\nimport { MotionComponent } from './pages/motion/motion.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { LeadComponent } from './pages/lead/lead.component';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatCardModule } from '@angular/material/card';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    AddprojectComponent,\r\n    MyprojectsComponent, //DialogContentExampleDialog\r\n    UpdateProjectComponent,\r\n    ManageprojectComponent,\r\n    MyrequistsComponent,\r\n    MydialogComponent,\r\n    UpdatePOPComponent,\r\n    MotionComponent,\r\n    LeadComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    MatDialogModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatStepperModule,\r\n    MatDividerModule,\r\n    MatListModule,\r\n    MatGridListModule,\r\n    MatCardModule\r\n  ],\r\n  entryComponents: [\r\n    MydialogComponent,\r\n    UpdatePOPComponent\r\n  ],\r\n  providers: [{provide: HTTP_INTERCEPTORS, useClass: TokenInterceptorService, multi:true}],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nexport interface data {\r\n    data : any\r\n}\r\n@Component({\r\n  selector: 'app-mydialog',\r\n  templateUrl: './mydialog.component.html',\r\n  styleUrls: ['./mydialog.component.scss']\r\n})\r\nexport class MydialogComponent implements OnInit {\r\n\r\n  item: any[] = [ ];\r\n  constructor(@Inject(MAT_DIALOG_DATA) public course : data ) {\r\n    //console.log(course.data[0]._id);\r\n    this.item = course.data;\r\n    //this.item = []\r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<table class=\"table table-hover table-sm\">\r\n    <thead>\r\n        <th scope=\"col\">Commit Message</th>\r\n        <th scope=\"col\">Date</th>\r\n        <th scope=\"col\">Commiter</th>\r\n        <th scope=\"col\">Email</th>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor = 'let git of item'>\r\n            <td>{{git.message}}</td>\r\n            <td>{{git.committer.date}}</td>\r\n            <td>{{git.committer.name}}</td>\r\n            <td>{{git.committer.email}}</td>\r\n        </tr>\r\n    </tbody>\r\n</table>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ProjectsService } from 'src/app/services/projects.service';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-addproject',\r\n  templateUrl: './addproject.component.html',\r\n  styleUrls: ['./addproject.component.scss']\r\n})\r\nexport class AddprojectComponent implements OnInit {\r\n\r\n  projectForm: FormGroup;\r\n  loading =false;\r\n  submitted=false;\r\n  returnUrl: string;\r\n  error: string;\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder,private route: ActivatedRoute,private router: Router,private projSev: ProjectsService) {\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.projectForm=this.formBuilder.group({\r\n      projectname: ['',Validators.required],\r\n      projecturl: ['',Validators.required],\r\n      groupmember: ['',Validators.required],\r\n      description: ['',Validators.required]\r\n    });\r\n  }\r\n\r\n  submit(){\r\n    this.submitted=true;\r\n    if (this.projectForm.invalid){\r\n      return;\r\n    }\r\n    this.loading=true;\r\n    this.projSev.addProjects(this.projectForm.controls.projectname.value,\r\n      this.projectForm.controls.projecturl.value,\r\n      \"{\"+this.projectForm.controls.groupmember.value+\"}\",\r\n      this.projectForm.controls.description.value).subscribe(response=>{\r\n        this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\r\n          this.router.navigate(['home']);\r\n      }); \r\n    },err=>{this.submitted=false;this.loading=false;this.error=err.message||err;});\r\n  }\r\n}\r\n","<!--<div *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</div>-->\r\n<div *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</div>\r\n<div class=\"center\">\r\n<form id=\"form1\" [formGroup]=\"projectForm\" (ngSubmit)=\"submit()\">\r\n    <div class=\"form-group\">\r\n        <label for=\"projectname\"><strong>Project Name</strong></label>\r\n        <input type=\"text\" formControlName=\"projectname\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && projectForm.controls.projectname.errors }\" />\r\n        <div *ngIf=\"submitted && projectForm.controls.projectname.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"projectForm.controls.projectname.errors.required\">Project's name is required</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"projecturl\"><strong>Project Url</strong></label>\r\n        <input type=\"url\" formControlName=\"projecturl\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && projectForm.controls.projecturl.errors }\" />\r\n        <div *ngIf=\"submitted && projectForm.controls.projecturl.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"projectForm.controls.projecturl.errors.required\">Project's Url is required</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"groupmember\"><strong>Group Members</strong></label>\r\n        <input type=\"text\" formControlName=\"groupmember\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && projectForm.controls.groupmember.errors }\" />\r\n        <div *ngIf=\"submitted && projectForm.controls.groupmember.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"projectForm.controls.groupmember.errors.required\">Group member is required</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"description\"><strong>Project Description</strong></label>\r\n        <input type=\"text\" formControlName=\"description\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && projectForm.controls.description.errors }\" />\r\n        <div *ngIf=\"submitted && projectForm.controls.discription.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"projectForm.controls.description.errors.required\">description is required</div>\r\n        </div>\r\n    </div>\r\n    <div id=\"but\" class=\"form-group\">\r\n        <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n            Submit\r\n        </button>\r\n        <a routerLink=\"/home\" class=\"btn btn-link\">Cancel</a>\r\n    </div>\r\n</form>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ProjectsService } from 'src/app/services/projects.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  Projects: any[] = [ ];\r\n  Attribute: any[] = [ ];\r\n  selectedproject = -1;\r\n\r\n  constructor(private projSvc:ProjectsService) { \r\n     projSvc.getApprovedProjects().subscribe(result=>{\r\n       this.Projects=result.data.projects;\r\n     })\r\n  }\r\n\r\n  showDetail(index,project){\r\n    console.log(index);\r\n    console.log(project);\r\n    if (this.selectedproject === index){\r\n      this.selectedproject = -1;\r\n    }\r\n    else {\r\n      this.selectedproject = index;\r\n    }\r\n  }\r\n\r\n  try(){\r\n    console.log();\r\n  }\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!---->\r\n<div>\r\n    <div class=\"container-fluid\">\r\n        <table class=\"table table-hover table-sm\">\r\n            <thead>\r\n                <th>Project Name</th>\r\n                <th>Description</th>\r\n                <th>Url</th>\r\n            </thead>\r\n        <tbody>\r\n            <tr *ngFor = 'let item of Projects'>\r\n                <td>{{item.name}}</td>\r\n                <td>{{item.description}}</td>\r\n                <td><a href='{{item.url}}' target='_new'>{{item.url}}</a></td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n    </div>\r\n</div>\r\n<!--\r\n<div>\r\n    <h2>All Project</h2>\r\n    <div class=\"container-fluid\">\r\n        <table class=\"table table-responsive\">\r\n            <thead>\r\n                <th>Project Name</th>\r\n            </thead>\r\n        </table>\r\n        <tbody>\r\n            <ng-template ngFor let- [ngForof]=\"Projects\" let-index=\"index\">\r\n                <tr (click)='showDetail(index,projects)' class=\"clickable\">\r\n                    <td>{{Projects.name}}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td colspan=3 class=\"detail\">\r\n                        <div class=\"container-fluid\">\r\n                            <div class=\"col-md-4\">\r\n                                <h4>Description: {{Projects.description}}</h4>\r\n                                <h4><a href='{{Projects.url}}' target='_new'>See Webpage</a> </h4>\r\n                            </div>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </tbody>\r\n    </div>\r\n</div>\r\n-->","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport FileSaver from 'file-saver';\nimport { FormControl, Validators } from '@angular/forms';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n\n@Component({\n  selector: 'app-lead',\n  templateUrl: './lead.component.html',\n  styleUrls: ['./lead.component.scss']\n})\nexport class LeadComponent implements OnInit {\n\n  fileName = '';\n\n  status = '';\n\n  new_fileName = '';\n\n  model_param = 'RadarSAT';\n\n  uploaded_image_url: string | ArrayBuffer;\n  image_source;\n  new_url;\n\n  downloaded_image_url;\n\n  constructor(private http: HttpClient, private sanitizer: DomSanitizer) { }\n\n  onFileSelected(event) {\n\n    const file:File = event.target.files[0];\n\n    if (file) {\n\n        this.fileName = file.name;\n\n        const formData = new FormData();\n\n        formData.append(\"file\", file);\n        formData.append(\"model_param\", this.model_param);\n\n        const upload$ = this.http.post(\"http://localhost:3000/api/projects/uploadLead\", formData);\n        \n        upload$.subscribe(result=>{\n          this.new_fileName = (result as any).data;\n          this.status = \"uploaded\";\n        });\n\n        let reader = new FileReader();\n        \n        reader.onloadend = () => {\n          this.uploaded_image_url = reader.result;\n          // console.log(typeof this.uploaded_image_url);\n\n          // this.new_url = this.uploaded_image_url.toString().replace('tiff', 'png');\n          // console.log(\n          //   this.new_url\n          // );\n\n          // this.image_source = this.sanitizer.bypassSecurityTrustUrl(\n          //   this.new_url.toString()\n          // );\n        };\n        reader.readAsDataURL(file);\n\n        \n        // this.image_source = this.sanitizer.bypassSecurityTrustUrl(\n        //   this.image_url[0]\n        // );\n\n    }\n  }\n\n  onSave(){\n    if (this.new_fileName!=''){\n      // console.log(\"flag1: \", this.new_fileName);\n\n      const isReady$ = this.http.post(\"http://localhost:3000/api/projects/isReadyLead\",\n        {name:this.new_fileName});\n    \n      isReady$.subscribe(result=>{\n\n        if ((result as any).data == true){\n          this.status=\"ready\";\n          const download$ = this.http.post(\"http://localhost:3000/api/projects/downloadLead\", \n            {name:this.new_fileName},{responseType:\"blob\"});\n          \n          download$.subscribe(result=>{\n              // console.log(result);\n              FileSaver(result, this.new_fileName);\n\n              let reader = new FileReader();\n        \n              reader.onloadend = () => {\n                this.downloaded_image_url = reader.result;\n              };\n              reader.readAsDataURL(result);\n\n            });\n\n        }\n\n        else{\n          this.status=\"not ready\";\n          console.log(\"file not ready yet\");\n        }\n\n      });\n\n      \n    }\n    \n  }\n\n  reloadPage(){\n    this.fileName = '';\n\n    this.status = '';\n  \n    this.new_fileName = '';\n  \n    // model_param = 'RadarSAT';\n  \n    this.uploaded_image_url = null;\n    this.image_source = null;\n    this.new_url = null;\n  \n    this.downloaded_image_url = null;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<input type=\"file\" class=\"file-input\"\n(change)=\"onFileSelected($event)\" #fileUpload hidden>\n\n<mat-vertical-stepper linear #stepper>\n    <mat-step>\n\n        <ng-template matStepLabel>Select Image Modality</ng-template>\n        <mat-form-field>\n            <mat-label>Choose Image Modality</mat-label>\n            <mat-select [(value)]=\"model_param\">\n                <mat-option value=\"WorldView\">WorldView</mat-option>\n                <mat-option value=\"RadarSAT\">RadarSAT</mat-option>\n                <mat-option value=\"GPRI\">GPRI</mat-option>\n            </mat-select>\n        </mat-form-field>\n        <div>\n            <button mat-button matStepperNext>Next</button>\n        </div>\n\n    </mat-step>\n    <mat-step>\n        <ng-template matStepLabel>Upload Image</ng-template>\n        <div class=\"file-upload\">\n            {{fileName || \"No image uploaded yet.\"}}\n            <button mat-mini-fab color=\"primary\" class=\"upload-btn\"\n                (click)=\"fileUpload.click()\">\n                <mat-icon>attach_file</mat-icon>\n            </button>\n        </div>\n        <div>\n            <button mat-button matStepperPrevious>Back</button>\n            <button mat-button matStepperNext>Next</button>\n        </div>\n    </mat-step>\n    <mat-step>\n        <ng-template matStepLabel>Download Prediction</ng-template>\n        <div>\n            Status: {{status}}\n        </div>\n        <button (click)=\"onSave()\">Download Prediction</button>\n        <div>\n            <!-- <button mat-button matStepperPrevious>Back</button> -->\n            <button mat-button (click)=\"stepper.reset();reloadPage();\">Reset</button>\n        </div>\n    </mat-step>\n</mat-vertical-stepper>\n\n\n\n\n<mat-grid-list cols=\"2\" rowHeight=\"1:1\">\n\n    <mat-grid-tile>\n        <mat-card class=\"img-card\">\n            <mat-card-header>\n                <mat-card-title>uploaded image:</mat-card-title>\n            </mat-card-header>\n            <div class=\"div1\">\n                <img src={{uploaded_image_url}}>\n            </div>\n        </mat-card>\n    </mat-grid-tile>\n\n\n    <mat-grid-tile>\n        <mat-card class=\"img-card\">\n            <mat-card-header>\n                <mat-card-title>downloaded image:</mat-card-title>\n            </mat-card-header>\n            <div class=\"div1\">\n                <img src={{downloaded_image_url}}>\n            </div>\n        </mat-card>\n    </mat-grid-tile>\n\n</mat-grid-list>\n\n\n\n\n\n<!-- <mat-list>\n    <mat-list-item>\n        uploaded image:\n    </mat-list-item>\n\n    <mat-divider [vertical]=\"true\"></mat-divider>\n\n    <mat-list-item>\n        <img src={{uploaded_image_url}}>\n    </mat-list-item>\n\n\n</mat-list> -->","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm: FormGroup;\r\n  loading =false;\r\n  submitted=false;\r\n  returnUrl: string;\r\n  error: string;\r\n\r\n  constructor(private formBuilder: FormBuilder,private route: ActivatedRoute,private router: Router,private authSvc:AuthService) {\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm=this.formBuilder.group({\r\n      username: ['',Validators.required],\r\n      password: ['',Validators.required]\r\n    });\r\n    this.returnUrl=this.route.snapshot.queryParams['returnUrl'] || '/';\r\n  }\r\n\r\n  login(){\r\n    this.submitted=true;\r\n    if (this.loginForm.invalid){\r\n      return;\r\n    }\r\n    this.loading=true;\r\n    this.authSvc.login(this.loginForm.controls.username.value,this.loginForm.controls.password.value).subscribe(response=>{\r\n      this.authSvc.IsAdmin();\r\n      this.router.navigate([this.returnUrl]);\r\n    },err=>{this.submitted=false;this.loading=false;this.error=err.message||err;});\r\n  }\r\n}\r\n","<div *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</div>\r\n<div class=\"center\">\r\n    <form id=\"form1\" [formGroup]=\"loginForm\" (ngSubmit)=\"login()\" class=\"text-center border border-light p-5\">\r\n        <p class=\"h4 mb-4\">Sign In</p>\r\n        <div class=\"form-group\">\r\n            <label for=\"username\">Username</label>\r\n            <input type=\"text\" formControlName=\"username\" class=\"form-control mb-4\" placeholder=\"E-mail\" \r\n            [ngClass]=\"{ 'is-invalid': submitted && loginForm.controls.username.errors }\" />\r\n            <div *ngIf=\"submitted && loginForm.controls.username.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"loginForm.controls.username.errors.required\">Username is required</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"password\">Password</label>\r\n            <input type=\"password\" formControlName=\"password\" class=\"form-control mb-4\" placeholder=\"Password\" \r\n            [ngClass]=\"{ 'is-invalid': submitted && loginForm.controls.password.errors }\" />\r\n            <div *ngIf=\"submitted && loginForm.controls.password.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"loginForm.controls.password.errors.required\">Password is required</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <button id=\"button1\" [disabled]=\"loading\" class=\"btn btn-primary\">\r\n                <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                Login\r\n            </button>\r\n            <a routerLink=\"/register\" class=\"btn btn-link\">Don't have account?</a>\r\n        </div>\r\n    </form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ProjectsService } from 'src/app/services/projects.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport {UpdatePOPComponent} from '../../update-pop/update-pop.component'\r\n\r\n@Component({\r\n  selector: 'app-manageproject',\r\n  templateUrl: './manageproject.component.html',\r\n  styleUrls: ['./manageproject.component.scss']\r\n})\r\nexport class ManageprojectComponent implements OnInit {\r\n  Projects: any[] = [ ];\r\n  Pending: any[] = [ ];\r\n  Approved: any[] = [ ];\r\n  selectedproject = -1;\r\n  error: string;\r\n  returnUrl: string;\r\n\r\n  constructor(private projSvc:ProjectsService, private route: ActivatedRoute, private router: Router, public dialog: MatDialog) { \r\n    this.reloadPage();\r\n  }\r\n\r\n  delete(id){\r\n    this.projSvc.deleteProject(id).subscribe(response=>{\r\n      this.reloadPage();\r\n      // TODO:: show response\r\n    },\r\n      err=>{this.error=err.message||err;});\r\n      this.reloadPage();\r\n  }\r\n\r\n  update(item){\r\n    const dialogRef = this.dialog.open(UpdatePOPComponent, {\r\n      width: '800px',\r\n      height: '700px',\r\n      data: {data : item},\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });\r\n    \r\n  }\r\n  approve(id){\r\n    this.projSvc.approveProject(id).subscribe(response=>{\r\n      // TODO:: show response  \r\n      this.reloadPage();\r\n      },\r\n      err=>{this.error=err.message||err;});\r\n      this.reloadPage();\r\n  }\r\n  reject(id){\r\n    this.projSvc.rejectProject(id).subscribe(response=>{\r\n      // TODO:: show response\r\n      this.reloadPage();\r\n      },\r\n      err=>{this.error=err.message||err;});\r\n      this.reloadPage();\r\n  }\r\n\r\n  reloadPage(){\r\n    this.projSvc.getAllProjects().subscribe(result=>{\r\n      this.Pending=result.data.projects;\r\n      this.Approved=result.data.projects;\r\n      this.Pending = this.Pending.filter(\r\n        project=>project.state=='pending');\r\n      this.Approved = this.Approved.filter(\r\n        project=>project.state=='approved');\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.returnUrl=this.route.snapshot.queryParams['returnUrl'] || '/';\r\n  }\r\n\r\n}\r\n","<div>\r\n    <div class=\"container-fluid\">\r\n        <h2><strong>Pending</strong></h2>\r\n        <table class=\"table table-hover table-sm\">\r\n            <thead>\r\n                <th style=\"width:130px\">Project Name</th>\r\n                <th style=\"width:230px\">Description</th>\r\n                <th style=\"width:150px\">Url</th>\r\n                <th style=\"width:150px\">Group Members</th>\r\n                <th style=\"width:110px\">Applicant</th>\r\n                <th style=\"width:150px\">Date Submitted</th>\r\n                <th style=\"width:150px\"></th>\r\n                <th style=\"width:110px\"></th>\r\n                <th style=\"width:110px\"></th>\r\n            </thead>\r\n        <tbody>\r\n            <tr *ngFor = 'let item of Pending'>\r\n                <td>{{item.name}}</td>\r\n                <td>{{item.description}}</td>\r\n                <td><a href='{{item.url}}' target='_new'>{{item.url}}</a></td>\r\n                <td>{{item.groupMembers}}</td>\r\n                <td>{{item.applicant}}</td>\r\n                <td>{{item.dateSubmitted}}</td>\r\n                <td></td>\r\n                <td><button class=\"btn-primary\" (click)='approve(item._id)'>approve</button></td>\r\n                <td><button class=\"btn-danger\" (click)='reject(item._id)'>reject</button></td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n    <h2><strong>Approved</strong></h2>\r\n        <table class=\"table table-hover table-sm\">\r\n            <thead>\r\n                <th style=\"width:130px\">Project name</th>\r\n                <th style=\"width:230px\">Description</th>\r\n                <th style=\"width:150px\">Url</th>\r\n                <th style=\"width:150px\">Group Members</th>\r\n                <th style=\"width:110px\">Applicant</th>\r\n                <th style=\"width:150px\">Date Submitted</th>\r\n                <th style=\"width:150px\">Date Updated</th>\r\n                <th style=\"width:110px\"></th>\r\n                <th style=\"width:110px\"></th>\r\n            </thead>\r\n        <tbody>\r\n            <tr *ngFor = 'let item of Approved'>\r\n                <td>{{item.name}}</td>\r\n                <td>{{item.description}}</td>\r\n                <td><a href='{{item.url}}' target='_new'>{{item.url}}</a></td>\r\n                <td>{{item.groupMembers}}</td>\r\n                <td>{{item.applicant}}</td>\r\n                <td>{{item.dateSubmitted}}</td>\r\n                <td>{{item.dateUpdated}}</td>\r\n                <td><button mat-button class=\"btn-primary\" (click)='update(item)'>update</button></td>\r\n                <td><button class=\"btn-danger\" (click)='delete(item._id)'>delete</button></td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport FileSaver from 'file-saver';\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-motion',\n  templateUrl: './motion.component.html',\n  styleUrls: ['./motion.component.scss']\n})\nexport class MotionComponent implements OnInit {\n\n  fileName = '';\n\n  status = '';\n\n  new_fileName = '';\n\n  model_param = 'RadarSAT';\n\n  constructor(private http: HttpClient) { }\n\n  onFileSelected(event) {\n\n    const file:File = event.target.files[0];\n\n    if (file) {\n\n        this.fileName = file.name;\n\n        const formData = new FormData();\n\n        formData.append(\"file\", file);\n        formData.append(\"model_param\", this.model_param);\n\n        const upload$ = this.http.post(\"http://localhost:3000/api/projects/uploadMotion\", formData);\n        \n        upload$.subscribe(result=>{\n          this.new_fileName = (result as any).data;\n          this.status = \"uploaded\";\n        });\n    }\n  }\n\n  onSave(){\n    if (this.new_fileName!=''){\n      // console.log(\"flag1: \", this.new_fileName);\n\n      const isReady$ = this.http.post(\"http://localhost:3000/api/projects/isReadyMotion\",\n        {name:this.new_fileName});\n    \n      isReady$.subscribe(result=>{\n\n        if ((result as any).data == true){\n          this.status=\"ready\";\n          const download$ = this.http.post(\"http://localhost:3000/api/projects/downloadMotion\", \n            {name:this.new_fileName},{responseType:\"blob\"});\n          \n          download$.subscribe(result=>{\n              // console.log(result);\n              FileSaver(result, this.new_fileName);\n            });\n\n        }\n\n        else{\n          this.status=\"not ready\";\n          console.log(\"file not ready yet\");\n        }\n\n      });\n\n      \n    }\n    \n  }\n\n  // onSave(){\n  //   if (this.new_fileName!=''){\n  //     console.log(\"flag1: \", this.new_fileName);\n\n  //     const download$ = this.http.post(\"http://localhost:3000/api/projects/downloadMotion\", \n  //       {name:this.new_fileName},{responseType:\"blob\"});\n\n      \n  //     download$.subscribe(result=>{\n  //         console.log(result);\n  //         // let downloadURL = window.URL.createObjectURL(data);\n  //         FileSaver(result, this.new_fileName);\n  //       });\n  //   }\n    \n  // }\n\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<input type=\"file\" class=\"file-input\"\n(change)=\"onFileSelected($event)\" #fileUpload hidden>\n\n<!-- <div>\n\n    <div>\n        <mat-form-field>\n            <mat-label>Choose model parameter</mat-label>\n            <mat-select [(value)]=\"model_param\">\n                <mat-option value=\"U-Net\">U-Net</mat-option>\n                <mat-option value=\"WorldView\">WorldView</mat-option>\n                <mat-option value=\"RadarSAT\">RadarSAT</mat-option>\n                <mat-option value=\"GPRI\">GPRI</mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n\n    <div class=\"file-upload\">\n        {{fileName || \"No file uploaded yet.\"}}\n        <button mat-mini-fab color=\"primary\" class=\"upload-btn\"\n            (click)=\"fileUpload.click()\">\n            <mat-icon>attach_file</mat-icon>\n        </button>\n    </div>\n    <div>\n        <div>\n            Filename: {{fileName}}\n        </div>\n        <div>\n            model_param: {{model_param}}\n        </div>\n        <div>\n            Status: {{status}}\n        </div>\n        <div>\n            New_fileName: {{new_fileName}}\n        </div>\n    </div>\n</div>\n\n<div>\n    <button (click)=\"onSave()\">Download Prediction</button>\n</div> -->\n\n\n<mat-vertical-stepper linear #stepper>\n    <mat-step>\n\n        <ng-template matStepLabel>Select Image Modality</ng-template>\n        <mat-form-field>\n            <mat-label>Choose Image Modality</mat-label>\n            <mat-select [(value)]=\"model_param\">\n                <mat-option value=\"WorldView\">WorldView</mat-option>\n                <mat-option value=\"RadarSAT\">RadarSAT</mat-option>\n                <mat-option value=\"GPRI\">GPRI</mat-option>\n            </mat-select>\n        </mat-form-field>\n        <div>\n            <button mat-button matStepperNext>Next</button>\n        </div>\n\n    </mat-step>\n    <mat-step>\n        <ng-template matStepLabel>Upload Image</ng-template>\n        <div class=\"file-upload\">\n            {{fileName || \"No image uploaded yet.\"}}\n            <button mat-mini-fab color=\"primary\" class=\"upload-btn\"\n                (click)=\"fileUpload.click()\">\n                <mat-icon>attach_file</mat-icon>\n            </button>\n        </div>\n        <div>\n            <button mat-button matStepperPrevious>Back</button>\n            <button mat-button matStepperNext>Next</button>\n        </div>\n    </mat-step>\n    <mat-step>\n        <ng-template matStepLabel>Download Prediction</ng-template>\n        <div>\n            Status: {{status}}\n        </div>\n        <button (click)=\"onSave()\">Download Prediction</button>\n        <div>\n            <!-- <button mat-button matStepperPrevious>Back</button> -->\n            <button mat-button (click)=\"stepper.reset()\">Reset</button>\n        </div>\n    </mat-step>\n</mat-vertical-stepper>","import { Component, OnInit, inject, Inject } from '@angular/core';\r\nimport { ProjectsService } from 'src/app/services/projects.service';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport {MydialogComponent} from '../../mydialog/mydialog.component'\r\n\r\n\r\n@Component({\r\n  selector: 'app-myprojects',\r\n  templateUrl: './myprojects.component.html',\r\n  styleUrls: ['./myprojects.component.scss']\r\n})\r\nexport class MyprojectsComponent implements OnInit {\r\n\r\n  Projects: any[] = [ ];\r\n  Attribute: any[] = [ ];\r\n  selectedproject = -1;\r\n  error: string;\r\n  github: any[]=[ ];\r\n\r\n  constructor(private projSvc:ProjectsService, public dialog: MatDialog) { \r\n    projSvc.getProjectsByCurUser().subscribe(result=>{\r\n       this.Projects=result.data;\r\n    })\r\n  }\r\n\r\n  showDetail(index, project){\r\n    console.log(index);\r\n    console.log(project);\r\n    if (this.selectedproject === index){\r\n      this.selectedproject = -1;\r\n    }\r\n    else {\r\n      this.selectedproject = index;\r\n    }\r\n  }\r\n  Committed(item){\r\n    this.projSvc.checkProjectCommits(item.url).subscribe(a=>{\r\n      this.github = a.data;\r\n      const dialogRef = this.dialog.open(MydialogComponent, {\r\n        width: '800px',\r\n        height: '700px',\r\n        data: {data : this.github},\r\n      });\r\n    })\r\n  }\r\n  \r\n  ngOnInit(): void {\r\n  }\r\n\r\n}","\r\n<div>\r\n    <div class=\"container-fluid\">\r\n        <table class=\"table table-hover table-sm\">\r\n            <thead>\r\n                <th>Project Name</th>\r\n                <th>Description</th>\r\n                <th>Group Members</th>\r\n                <th>Url</th>\r\n                <th></th>\r\n                <!--<th>Update</th>-->\r\n                <!--<th>Delate</th>-->\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor = 'let item of Projects'>\r\n                    <td>{{item.name}}</td>\r\n                    <td>{{item.description}}</td>\r\n                    <td>{{item.groupMembers}}</td>\r\n                    <td><a href='{{item.url}}' target='_new'>{{item.url}}</a></td>\r\n                    <th><button mat-button style=\"border-radius: 12px; text-align: center; background-color: #2AF1E5; color: white;\" (click)='Committed(item)'>Check Commit</button></th>\r\n                    <!--<td><button class=\"btn-primary\" (click)='update(item._id,item.name,item.url,item.groupMembers,item.description)' routerLink=\"/updateproject\">update</button></td>\r\n                    <td><button class=\"btn-danger\" (click)='delate(item._id)'>delete</button></td>-->\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ProjectsService } from 'src/app/services/projects.service';\r\n\r\n@Component({\r\n  selector: 'app-myrequists',\r\n  templateUrl: './myrequists.component.html',\r\n  styleUrls: ['./myrequists.component.scss']\r\n})\r\nexport class MyrequistsComponent implements OnInit {\r\n  Projects: any[] = [ ];\r\n  Attribute: any[] = [ ];\r\n  selectedproject = -1;\r\n  error: string;\r\n\r\n  constructor(private projSvc:ProjectsService) { \r\n    projSvc.getSubmittedProjects().subscribe(result=>{\r\n      this.Projects=result.data.projects;\r\n    })\r\n  }\r\n\r\n  showDetail(index, project){\r\n    console.log(index);\r\n    console.log(project);\r\n    if (this.selectedproject === index){\r\n      this.selectedproject = -1;\r\n    }\r\n    else {\r\n      this.selectedproject = index;\r\n    }\r\n  }\r\n\r\n  delate(id){\r\n    //let index = this.Projects.indexOf(item);\r\n    this.projSvc.deleteProject(id).subscribe(err=>{this.error=err.message||err;\r\n      this.projSvc.getSubmittedProjects().subscribe(result=>{\r\n        this.Projects=result.data;\r\n      })}\r\n      );\r\n  }\r\n  update(id, name, url, groupmember, description){\r\n    this.projSvc.SetIndex(id);\r\n    this.projSvc.SendInfo(name, url, groupmember, description);\r\n  }\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div>\r\n    <div class=\"container-fluid\">\r\n        <table class=\"table table-hover table-sm\">\r\n            <thead>\r\n                <th>Project Name</th>\r\n                <th>Description</th>\r\n                <th>Group Members</th>\r\n                <th>Url</th>\r\n                <th>State</th>\r\n                <th>Approved/Rejected By</th>\r\n                <!--<th>Update</th>-->\r\n                <!--<th>Delate</th>-->\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor = 'let item of Projects'>\r\n                    <td>{{item.name}}</td>\r\n                    <td>{{item.description}}</td>\r\n                    <td>{{item.groupMembers}}</td>\r\n                    <td><a href='{{item.url}}' target='_new'>{{item.url}}</a></td>\r\n                    <td>{{item.state}}</td>\r\n                    <td>{{item.approvedBy}}</td>\r\n                    <!--<td><button class=\"btn-primary\" (click)='update(item._id,item.name,item.url,item.groupMembers,item.description)' routerLink=\"/updateproject\">update</button></td>\r\n                    <td><button class=\"btn-danger\" (click)='delate(item._id)'>delete</button></td>-->\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  registerForm: FormGroup;\r\n  loading =false;\r\n  submitted=false;\r\n  returnUrl: string;\r\n  error: string;\r\n\r\n  constructor(private formBuilder: FormBuilder,private route: ActivatedRoute,private router: Router,private authSvc:AuthService) {\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.registerForm=this.formBuilder.group({\r\n      username: ['',Validators.required],\r\n      password: ['',Validators.required]\r\n    });\r\n    this.returnUrl=this.route.snapshot.queryParams['returnUrl'] || '/';\r\n  }\r\n\r\n  regist(){\r\n    this.submitted=true;\r\n    if (this.registerForm.invalid){\r\n      return;\r\n    }\r\n    this.loading=true;\r\n    this.authSvc.regist(this.registerForm.controls.username.value,this.registerForm.controls.password.value).subscribe(response=>{\r\n      this.router.navigate([this.returnUrl]);\r\n    },err=>{this.submitted=false;this.loading=false;this.error=err.message||err;});\r\n  }\r\n}\r\n","<div *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</div>\r\n<div class=\"center\">\r\n    <form id=\"form1\" [formGroup]=\"registerForm\" (ngSubmit)=\"regist()\" class=\"text-center border border-light p-5\">\r\n        <p class=\"h4 mb-4\">Sign Up</p>\r\n        <div class=\"form-group\">\r\n            <label for=\"username\">Username</label>\r\n            <input type=\"text\" formControlName=\"username\" class=\"form-control\" \r\n            [ngClass]=\"{ 'is-invalid': submitted && registerForm.controls.username.errors }\" placeholder=\"E-mail\"/>\r\n            <div *ngIf=\"submitted && registerForm.controls.username.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"registerForm.controls.username.errors.required\">Username is required</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"password\">Password</label>\r\n            <input type=\"password\" formControlName=\"password\" class=\"form-control\" placeholder=\"Password\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && registerForm.controls.password.errors }\" />\r\n            <div *ngIf=\"submitted && registerForm.controls.password.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"registerForm.controls.password.errors.required\">Password is required</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n                <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                register\r\n            </button>\r\n            <a routerLink=\"/login\" class=\"btn btn-link\">Already has account</a>\r\n        </div>\r\n    </form>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ProjectsService } from 'src/app/services/projects.service';\r\n\r\n@Component({\r\n  selector: 'app-updateproject',\r\n  templateUrl: './updateproject.component.html',\r\n  styleUrls: ['./updateproject.component.scss']\r\n})\r\nexport class UpdateProjectComponent implements OnInit {\r\n  Infor: any[] = [ ];\r\n  updateForm: FormGroup;\r\n  loading =false;\r\n  submitted=false;\r\n  returnUrl: string;\r\n  error: string;\r\n  index: string;\r\n  url: string;\r\n  name: string;\r\n  groupMember: string;\r\n  descript: string;\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder,private route: ActivatedRoute,private router: Router,private projSev: ProjectsService) {\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.updateForm=this.formBuilder.group({\r\n      projectname: ['',Validators.required],\r\n      projecturl: ['',Validators.required],\r\n      groupmember: ['',Validators.required],\r\n      description: ['',Validators.required]\r\n    });\r\n    this.index=this.projSev.GetIndex();\r\n    this.name=this.projSev.GetName();\r\n    this.url=this.projSev.GetUrl();\r\n    this.groupMember=this.projSev.GetGroupM();\r\n    this.descript=this.projSev.GetDescript();\r\n    this.Infor = [{\r\n      \"name\": this.name,\r\n      \"description\": this.descript,\r\n      \"url\": this.url,\r\n      \"groupMembers\": this.groupMember\r\n  } ];\r\n    this.returnUrl=this.route.snapshot.queryParams['returnUrl'] || '/';\r\n  }\r\n\r\n  submit(){\r\n    this.submitted=true;\r\n    if (this.updateForm.invalid){\r\n      return;\r\n    }\r\n    this.loading=true;\r\n    this.projSev.UpdateProject(this.index,this.updateForm.controls.projectname.value,\r\n      this.updateForm.controls.projecturl.value,\r\n      \"{\"+this.updateForm.controls.groupmember.value+\"}\",\r\n      this.updateForm.controls.description.value).subscribe(response=>{\r\n      this.router.navigate([this.returnUrl]);\r\n    },err=>{this.submitted=false;this.loading=false;this.error=err.message||err;});\r\n  }\r\n}\r\n","<!--<div *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</div>-->\r\n<div *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</div>\r\n<div class=\"center\">\r\n<h2>Update Project</h2>\r\n<form id=\"form1\" [formGroup]=\"updateForm\" (ngSubmit)=\"submit()\">\r\n    <div class=\"form-group\">\r\n        <label for=\"projectname\">Project's Name</label>\r\n        <input formControlName=\"projectname\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && updateForm.controls.projectname.errors }\" \r\n        #textbox type=\"text\" [(ngModel)]=\"name\"/>\r\n        <div *ngIf=\"submitted && updateForm.controls.projectname.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"updateForm.controls.projectname.errors.required\">Project's name is required</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"projecturl\">Project's Url</label>\r\n        <input formControlName=\"projecturl\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && updateForm.controls.projecturl.errors }\" \r\n        #textbox type=\"url\" [(ngModel)]=\"url\"/>\r\n        <div *ngIf=\"submitted && updateForm.controls.projecturl.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"updateForm.controls.projecturl.errors.required\">Project's Url is required</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"groupmember\">Group Member</label>\r\n        <input formControlName=\"groupmember\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && updateForm.controls.groupmember.errors }\" \r\n        #textbox type=\"text\" [(ngModel)]=\"groupMember\"/>\r\n        <div *ngIf=\"submitted && updateForm.controls.groupmember.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"updateForm.controls.groupmember.errors.required\">Group member is required</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"description\">Description</label>\r\n        <input formControlName=\"description\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && updateForm.controls.description.errors }\" \r\n        #textbox type=\"text\" [(ngModel)]=\"descript\"/>\r\n        <div *ngIf=\"submitted && updateForm.controls.description.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"updateForm.controls.description.errors.required\">description is required</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n            Submit\r\n        </button>\r\n    </div>\r\n</form>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, ReplaySubject, throwError } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private path='http://localhost:3000/api/security/'\r\n  private _token:string=null;\r\n  private isAD: boolean=false;\r\n  CurrentUser: ReplaySubject<string>=new ReplaySubject<string>();\r\n\r\n  get token():string{\r\n    if (this._token==null){\r\n      this._token=localStorage.getItem('token')\r\n    }\r\n    return this._token;\r\n  }\r\n  \r\n  set token(val:string){\r\n    this._token=val;\r\n    if (val==null)\r\n      localStorage.removeItem('token');\r\n    else\r\n      localStorage.setItem('token',val);\r\n  }\r\n  get loggedIn():boolean{\r\n    return this.token!=null;\r\n  }\r\n  get Admin():boolean{\r\n    return this.isAD;\r\n  }\r\n  constructor(private http:HttpClient) { \r\n    this.CurrentUser.next(null);\r\n  }\r\n\r\n  //authorize calls the underlying api to see if the current token is valid (if it exists) and clears it if it is not.\r\n  //returns nothing, but updates token if it is invalid\r\n  authorize():void{\r\n    this.http.get(this.path+'authorize').subscribe(result=>{\r\n      //on success, we do nothing because token is good\r\n      if (result['status']!='success'){\r\n        this.token=null;\r\n      }\r\n      else{\r\n        this.CurrentUser.next(result['data'].email)\r\n      }\r\n    },err=>{\r\n      this.token=null;\r\n    });\r\n  }\r\n  IsAdmin(): void{\r\n    this.http.get(this.path+'isAdmin').subscribe(result=>{\r\n      if (result['data']==='True'){\r\n        this.isAD=true;\r\n      }\r\n      else{\r\n        this.isAD=false;\r\n      }\r\n    },err=>{\r\n      this.isAD=false;\r\n    }\r\n    )\r\n  }\r\n\r\n  login(email: string,password:string): Observable<any>{\r\n    return this.http.post<any>(this.path+'login',{email: email,password: password })\r\n      .pipe(map(user=>{\r\n        this.token=user.data.token\r\n        this.CurrentUser.next(user.data.user.email);\r\n        return user.data.user;\r\n      }),catchError(err=>{this.CurrentUser.next(null);this.token=null;return throwError(err.message||'server error')}));\r\n  }\r\n\r\n  regist(email: string,password:string): Observable<any>{\r\n    return this.http.post<any>(this.path+'register',{email: email,password: password })\r\n    .pipe(catchError(err=>{return throwError(err.message||'server error')}));\r\n  }\r\n\r\n  logout(){\r\n    this.token=null;\r\n    this.isAD=false;\r\n    this.CurrentUser.next(null);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectsService {\r\n\r\n  private path=\"http://localhost:3000/api/projects/\"\r\n  constructor(private http:HttpClient) { }\r\n  index: string;\r\n  Name: string;\r\n  URL: string;\r\n  GroupM: string;\r\n  Descript: string;\r\n\r\n  github: any[]=[ ];\r\n\r\n  getApprovedProjects(): Observable<any>{\r\n    return this.http.get(this.path+'getApprovedProjects');\r\n  }\r\n  getSubmittedProjects(): Observable<any>{\r\n    return this.http.get(this.path+'getSubmittedProjects');\r\n  }\r\n  getProjectsByCurUser(): Observable<any>{\r\n    return this.http.get(this.path+'getProjectsByCurUser');\r\n  }\r\n  getAllProjects(): Observable<any>{\r\n    return this.http.get(this.path+'getAllProjects');\r\n  }\r\n  addProjects(name: string, url: string, groupmember: string, description: string): Observable<any>{\r\n    return this.http.post(this.path,{name: name, url: url, groupMembers: groupmember, description: description});\r\n  }\r\n  approveProject(id): Observable<any>{\r\n    return this.http.post(this.path+\"approveProject\",{id: id});\r\n  }\r\n  rejectProject(id): Observable<any>{\r\n    return this.http.post(this.path+\"rejectProject\",{id: id});\r\n  }\r\n  UpdateProject(id, name: string, url: string, groupmember: string, description: string): Observable<any>{\r\n    return this.http.put(this.path+'',{id: id, name: name, url: url, groupMembers: groupmember, description: description});\r\n  }\r\n  checkProjectCommits(url: string): Observable<any>{\r\n    return this.http.post(this.path+'checkProjectCommits',{url: url});\r\n  }\r\n\r\n  deleteProject(id): Observable<any>{\r\n    return this.http.post(this.path+'deleteProject',{id: id});\r\n  }\r\n  SetIndex(id) {\r\n    this.index = id;\r\n  }\r\n  GetIndex() {\r\n    return this.index;\r\n  }\r\n  SendInfo(name, url, groupmember, description) {\r\n    this.Name=name;\r\n    this.URL=url;\r\n    this.GroupM=groupmember;\r\n    this.Descript=description;\r\n  }\r\n  GetName() {\r\n    return this.Name;\r\n  }\r\n  GetUrl() {\r\n    return this.URL;\r\n  }\r\n  GetGroupM() {\r\n    return this.GroupM;\r\n  }\r\n  GetDescript() {\r\n    return this.Descript;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenInterceptorService implements HttpInterceptor {\r\n\r\n  constructor(private authSvc:AuthService) { }\r\n  intercept(req: HttpRequest<any>, next: HttpHandler):   Observable<HttpEvent<any>> {\r\n    // All HTTP requests are going to go through this method\r\n    let newHeaders=req.headers;\r\n    if (this.authSvc.token){\r\n      newHeaders=newHeaders.append('Authorization',this.authSvc.token);\r\n      const authReq=req.clone({headers: newHeaders});\r\n      return next.handle(authReq);\r\n    }\r\n    return next.handle(req);\r\n}\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ProjectsService } from 'src/app/services/projects.service';\r\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material/dialog';\r\nexport interface data {\r\n  data : any\r\n}\r\n\r\n@Component({\r\n  selector: 'app-update-pop',\r\n  templateUrl: './update-pop.component.html',\r\n  styleUrls: ['./update-pop.component.scss']\r\n})\r\nexport class UpdatePOPComponent implements OnInit {\r\n\r\n  submitted=false;\r\n  loading =false;\r\n  error: string;\r\n  index: string;\r\n  updateForm: FormGroup;\r\n  item: any[] = [ ];\r\n  url: string;\r\n  name: string;\r\n  groupMembers: string;\r\n  description: string;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n    public dialogRef: MatDialogRef<UpdatePOPComponent>,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private projSev: ProjectsService, \r\n    @Inject(MAT_DIALOG_DATA) public course : data ) {\r\n    //console.log(course.data[0]._id);\r\n    this.item = course.data;\r\n    this.name = course.data.name;\r\n    this.url = course.data.url;\r\n    this.groupMembers = course.data.groupMembers;\r\n    this.description = course.data.description;\r\n    //this.item = []\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.updateForm=this.formBuilder.group({\r\n      projectname: ['',Validators.required],\r\n      projecturl: ['',Validators.required],\r\n      groupmember: ['',Validators.required],\r\n      description: ['',Validators.required]\r\n    });\r\n  }\r\n\r\n  \r\n  submit(item){\r\n    this.submitted=true;\r\n    if (this.updateForm.invalid){\r\n      return;\r\n    }\r\n    this.loading=true;\r\n    this.projSev.UpdateProject(item._id,this.updateForm.controls.projectname.value,\r\n      this.updateForm.controls.projecturl.value,\r\n      \"{\"+this.updateForm.controls.groupmember.value+\"}\",\r\n      this.updateForm.controls.description.value).subscribe(response=>{\r\n        this.dialogRef.close();\r\n        location.reload();\r\n    },err=>{this.submitted=false;this.loading=false;this.error=err.message||err;});\r\n  }\r\n\r\n}\r\n","<!--<div *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</div>-->\r\n<div *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</div>\r\n<div class=\"center\">\r\n<form id=\"form1\" [formGroup]=\"updateForm\" (ngSubmit)=\"submit(item)\">\r\n    <div class=\"form-group\">\r\n        <label for=\"projectname\"><strong>Project Name</strong></label>\r\n        <input formControlName=\"projectname\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && updateForm.controls.projectname.errors }\" \r\n        #textbox type=\"text\" [(ngModel)]=\"name\"/>\r\n        <div *ngIf=\"submitted && updateForm.controls.projectname.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"updateForm.controls.projectname.errors.required\">Project's name is required</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"projecturl\"><strong>Project Url</strong></label>\r\n        <input formControlName=\"projecturl\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && updateForm.controls.projecturl.errors }\" \r\n        #textbox type=\"url\" [(ngModel)]=\"url\"/>\r\n        <div *ngIf=\"submitted && updateForm.controls.projecturl.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"updateForm.controls.projecturl.errors.required\">Project's Url is required</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"groupmember\"><strong>Group Members</strong></label>\r\n        <input formControlName=\"groupmember\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && updateForm.controls.groupmember.errors }\" \r\n        #textbox type=\"text\" [(ngModel)]=\"groupMembers\"/>\r\n        <div *ngIf=\"submitted && updateForm.controls.groupmember.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"updateForm.controls.groupmember.errors.required\">Group member is required</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"description\"><strong>Project Description</strong></label>\r\n        <input formControlName=\"description\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && updateForm.controls.description.errors }\" \r\n        #textbox type=\"text\" [(ngModel)]=\"description\"/>\r\n        <div *ngIf=\"submitted && updateForm.controls.description.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"updateForm.controls.description.errors.required\">description is required</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n            Submit\r\n        </button>\r\n        <button style=\"text-align: center;\" mat-button mat-dialog-close class=\"btn btn-primary\"> Cancel</button>\r\n    </div>\r\n</form>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}